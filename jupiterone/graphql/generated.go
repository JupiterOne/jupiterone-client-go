// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql

import (
	"context"
	"encoding/json"

	"github.com/Khan/genqlient/graphql"
)

// CreateInstanceCreateIntegrationInstance includes the requested fields of the GraphQL type IntegrationInstance.
type CreateInstanceCreateIntegrationInstance struct {
	Id                      string                     `json:"id"`
	Name                    string                     `json:"name"`
	Description             string                     `json:"description"`
	PollingInterval         IntegrationPollingInterval `json:"pollingInterval"`
	IntegrationDefinitionId string                     `json:"integrationDefinitionId"`
	Config                  map[string]interface{}     `json:"config"`
}

// GetId returns CreateInstanceCreateIntegrationInstance.Id, and is useful for accessing the field via an interface.
func (v *CreateInstanceCreateIntegrationInstance) GetId() string { return v.Id }

// GetName returns CreateInstanceCreateIntegrationInstance.Name, and is useful for accessing the field via an interface.
func (v *CreateInstanceCreateIntegrationInstance) GetName() string { return v.Name }

// GetDescription returns CreateInstanceCreateIntegrationInstance.Description, and is useful for accessing the field via an interface.
func (v *CreateInstanceCreateIntegrationInstance) GetDescription() string { return v.Description }

// GetPollingInterval returns CreateInstanceCreateIntegrationInstance.PollingInterval, and is useful for accessing the field via an interface.
func (v *CreateInstanceCreateIntegrationInstance) GetPollingInterval() IntegrationPollingInterval {
	return v.PollingInterval
}

// GetIntegrationDefinitionId returns CreateInstanceCreateIntegrationInstance.IntegrationDefinitionId, and is useful for accessing the field via an interface.
func (v *CreateInstanceCreateIntegrationInstance) GetIntegrationDefinitionId() string {
	return v.IntegrationDefinitionId
}

// GetConfig returns CreateInstanceCreateIntegrationInstance.Config, and is useful for accessing the field via an interface.
func (v *CreateInstanceCreateIntegrationInstance) GetConfig() map[string]interface{} { return v.Config }

// CreateInstanceResponse is returned by CreateInstance on success.
type CreateInstanceResponse struct {
	CreateIntegrationInstance CreateInstanceCreateIntegrationInstance `json:"createIntegrationInstance"`
}

// GetCreateIntegrationInstance returns CreateInstanceResponse.CreateIntegrationInstance, and is useful for accessing the field via an interface.
func (v *CreateInstanceResponse) GetCreateIntegrationInstance() CreateInstanceCreateIntegrationInstance {
	return v.CreateIntegrationInstance
}

type CreateIntegrationInstanceInput struct {
	Name                          string                                         `json:"name"`
	SourceIntegrationInstanceId   *string                                        `json:"sourceIntegrationInstanceId,omitempty"`
	PollingInterval               *IntegrationPollingInterval                    `json:"pollingInterval,omitempty"`
	PollingIntervalCronExpression *IntegrationPollingIntervalCronExpressionInput `json:"pollingIntervalCronExpression,omitempty"`
	IntegrationDefinitionId       string                                         `json:"integrationDefinitionId"`
	Description                   *string                                        `json:"description,omitempty"`
	Config                        *map[string]interface{}                        `json:"config,omitempty"`
	OffsiteComplete               *bool                                          `json:"offsiteComplete,omitempty"`
}

// GetName returns CreateIntegrationInstanceInput.Name, and is useful for accessing the field via an interface.
func (v *CreateIntegrationInstanceInput) GetName() string { return v.Name }

// GetSourceIntegrationInstanceId returns CreateIntegrationInstanceInput.SourceIntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *CreateIntegrationInstanceInput) GetSourceIntegrationInstanceId() *string {
	return v.SourceIntegrationInstanceId
}

// GetPollingInterval returns CreateIntegrationInstanceInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *CreateIntegrationInstanceInput) GetPollingInterval() *IntegrationPollingInterval {
	return v.PollingInterval
}

// GetPollingIntervalCronExpression returns CreateIntegrationInstanceInput.PollingIntervalCronExpression, and is useful for accessing the field via an interface.
func (v *CreateIntegrationInstanceInput) GetPollingIntervalCronExpression() *IntegrationPollingIntervalCronExpressionInput {
	return v.PollingIntervalCronExpression
}

// GetIntegrationDefinitionId returns CreateIntegrationInstanceInput.IntegrationDefinitionId, and is useful for accessing the field via an interface.
func (v *CreateIntegrationInstanceInput) GetIntegrationDefinitionId() string {
	return v.IntegrationDefinitionId
}

// GetDescription returns CreateIntegrationInstanceInput.Description, and is useful for accessing the field via an interface.
func (v *CreateIntegrationInstanceInput) GetDescription() *string { return v.Description }

// GetConfig returns CreateIntegrationInstanceInput.Config, and is useful for accessing the field via an interface.
func (v *CreateIntegrationInstanceInput) GetConfig() *map[string]interface{} { return v.Config }

// GetOffsiteComplete returns CreateIntegrationInstanceInput.OffsiteComplete, and is useful for accessing the field via an interface.
func (v *CreateIntegrationInstanceInput) GetOffsiteComplete() *bool { return v.OffsiteComplete }

type DeferredResponseFormat string

const (
	DeferredResponseFormatJson DeferredResponseFormat = "JSON"
	DeferredResponseFormatCsv  DeferredResponseFormat = "CSV"
)

type DeferredResponseOption string

const (
	DeferredResponseOptionDisabled DeferredResponseOption = "DISABLED"
	DeferredResponseOptionOptional DeferredResponseOption = "OPTIONAL"
	DeferredResponseOptionForce    DeferredResponseOption = "FORCE"
)

// DeleteIntegrationInstanceDeleteIntegrationInstanceDeletionResult includes the requested fields of the GraphQL type DeletionResult.
type DeleteIntegrationInstanceDeleteIntegrationInstanceDeletionResult struct {
	Success bool `json:"success"`
}

// GetSuccess returns DeleteIntegrationInstanceDeleteIntegrationInstanceDeletionResult.Success, and is useful for accessing the field via an interface.
func (v *DeleteIntegrationInstanceDeleteIntegrationInstanceDeletionResult) GetSuccess() bool {
	return v.Success
}

// DeleteIntegrationInstanceResponse is returned by DeleteIntegrationInstance on success.
type DeleteIntegrationInstanceResponse struct {
	DeleteIntegrationInstance DeleteIntegrationInstanceDeleteIntegrationInstanceDeletionResult `json:"deleteIntegrationInstance"`
}

// GetDeleteIntegrationInstance returns DeleteIntegrationInstanceResponse.DeleteIntegrationInstance, and is useful for accessing the field via an interface.
func (v *DeleteIntegrationInstanceResponse) GetDeleteIntegrationInstance() DeleteIntegrationInstanceDeleteIntegrationInstanceDeletionResult {
	return v.DeleteIntegrationInstance
}

type FieldSort struct {
	Field string    `json:"field"`
	Order SortOrder `json:"order"`
}

// GetField returns FieldSort.Field, and is useful for accessing the field via an interface.
func (v *FieldSort) GetField() string { return v.Field }

// GetOrder returns FieldSort.Order, and is useful for accessing the field via an interface.
func (v *FieldSort) GetOrder() SortOrder { return v.Order }

type FilterType string

const (
	FilterTypeAnd                FilterType = "AND"
	FilterTypeAndWithSameFieldOr FilterType = "AND_WITH_SAME_FIELD_OR"
	FilterTypeAndWithClassOr     FilterType = "AND_WITH_CLASS_OR"
	FilterTypeOrWithClassOr      FilterType = "OR_WITH_CLASS_OR"
	FilterTypeOr                 FilterType = "OR"
)

// GetIntegrationDefinitionIntegrationDefinition includes the requested fields of the GraphQL type IntegrationDefinition.
type GetIntegrationDefinitionIntegrationDefinition struct {
	Id               string   `json:"id"`
	IntegrationType  string   `json:"integrationType"`
	IntegrationClass []string `json:"integrationClass"`
	Name             string   `json:"name"`
	Title            string   `json:"title"`
	RepoWebLink      string   `json:"repoWebLink"`
}

// GetId returns GetIntegrationDefinitionIntegrationDefinition.Id, and is useful for accessing the field via an interface.
func (v *GetIntegrationDefinitionIntegrationDefinition) GetId() string { return v.Id }

// GetIntegrationType returns GetIntegrationDefinitionIntegrationDefinition.IntegrationType, and is useful for accessing the field via an interface.
func (v *GetIntegrationDefinitionIntegrationDefinition) GetIntegrationType() string {
	return v.IntegrationType
}

// GetIntegrationClass returns GetIntegrationDefinitionIntegrationDefinition.IntegrationClass, and is useful for accessing the field via an interface.
func (v *GetIntegrationDefinitionIntegrationDefinition) GetIntegrationClass() []string {
	return v.IntegrationClass
}

// GetName returns GetIntegrationDefinitionIntegrationDefinition.Name, and is useful for accessing the field via an interface.
func (v *GetIntegrationDefinitionIntegrationDefinition) GetName() string { return v.Name }

// GetTitle returns GetIntegrationDefinitionIntegrationDefinition.Title, and is useful for accessing the field via an interface.
func (v *GetIntegrationDefinitionIntegrationDefinition) GetTitle() string { return v.Title }

// GetRepoWebLink returns GetIntegrationDefinitionIntegrationDefinition.RepoWebLink, and is useful for accessing the field via an interface.
func (v *GetIntegrationDefinitionIntegrationDefinition) GetRepoWebLink() string { return v.RepoWebLink }

// GetIntegrationDefinitionResponse is returned by GetIntegrationDefinition on success.
type GetIntegrationDefinitionResponse struct {
	IntegrationDefinition GetIntegrationDefinitionIntegrationDefinition `json:"integrationDefinition"`
}

// GetIntegrationDefinition returns GetIntegrationDefinitionResponse.IntegrationDefinition, and is useful for accessing the field via an interface.
func (v *GetIntegrationDefinitionResponse) GetIntegrationDefinition() GetIntegrationDefinitionIntegrationDefinition {
	return v.IntegrationDefinition
}

// GetIntegrationInstanceIntegrationInstance includes the requested fields of the GraphQL type IntegrationInstance.
type GetIntegrationInstanceIntegrationInstance struct {
	IntegrationInstanceValues `json:"-"`
	Typename                  string `json:"__typename"`
}

// GetTypename returns GetIntegrationInstanceIntegrationInstance.Typename, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetTypename() string { return v.Typename }

// GetId returns GetIntegrationInstanceIntegrationInstance.Id, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetId() string {
	return v.IntegrationInstanceValues.Id
}

// GetName returns GetIntegrationInstanceIntegrationInstance.Name, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetName() string {
	return v.IntegrationInstanceValues.Name
}

// GetAccountId returns GetIntegrationInstanceIntegrationInstance.AccountId, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetAccountId() string {
	return v.IntegrationInstanceValues.AccountId
}

// GetSourceIntegrationInstanceId returns GetIntegrationInstanceIntegrationInstance.SourceIntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetSourceIntegrationInstanceId() string {
	return v.IntegrationInstanceValues.SourceIntegrationInstanceId
}

// GetPollingInterval returns GetIntegrationInstanceIntegrationInstance.PollingInterval, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetPollingInterval() IntegrationPollingInterval {
	return v.IntegrationInstanceValues.PollingInterval
}

// GetPollingIntervalCronExpression returns GetIntegrationInstanceIntegrationInstance.PollingIntervalCronExpression, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetPollingIntervalCronExpression() PollingIntervalCronExpression {
	return v.IntegrationInstanceValues.PollingIntervalCronExpression
}

// GetIntegrationDefinition returns GetIntegrationInstanceIntegrationInstance.IntegrationDefinition, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetIntegrationDefinition() IntegrationInstanceValuesIntegrationDefinition {
	return v.IntegrationInstanceValues.IntegrationDefinition
}

// GetIntegrationDefinitionId returns GetIntegrationInstanceIntegrationInstance.IntegrationDefinitionId, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetIntegrationDefinitionId() string {
	return v.IntegrationInstanceValues.IntegrationDefinitionId
}

// GetDescription returns GetIntegrationInstanceIntegrationInstance.Description, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetDescription() string {
	return v.IntegrationInstanceValues.Description
}

// GetConfig returns GetIntegrationInstanceIntegrationInstance.Config, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetConfig() map[string]interface{} {
	return v.IntegrationInstanceValues.Config
}

// GetOffsiteComplete returns GetIntegrationInstanceIntegrationInstance.OffsiteComplete, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetOffsiteComplete() bool {
	return v.IntegrationInstanceValues.OffsiteComplete
}

// GetJobs returns GetIntegrationInstanceIntegrationInstance.Jobs, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetJobs() IntegrationInstanceValuesJobsIntegrationJobsResult {
	return v.IntegrationInstanceValues.Jobs
}

// GetInstanceRelationship returns GetIntegrationInstanceIntegrationInstance.InstanceRelationship, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceIntegrationInstance) GetInstanceRelationship() IntegrationInstanceRelationship {
	return v.IntegrationInstanceValues.InstanceRelationship
}

func (v *GetIntegrationInstanceIntegrationInstance) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetIntegrationInstanceIntegrationInstance
		graphql.NoUnmarshalJSON
	}
	firstPass.GetIntegrationInstanceIntegrationInstance = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.IntegrationInstanceValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetIntegrationInstanceIntegrationInstance struct {
	Typename string `json:"__typename"`

	Id string `json:"id"`

	Name string `json:"name"`

	AccountId string `json:"accountId"`

	SourceIntegrationInstanceId string `json:"sourceIntegrationInstanceId"`

	PollingInterval IntegrationPollingInterval `json:"pollingInterval"`

	PollingIntervalCronExpression PollingIntervalCronExpression `json:"pollingIntervalCronExpression"`

	IntegrationDefinition IntegrationInstanceValuesIntegrationDefinition `json:"integrationDefinition"`

	IntegrationDefinitionId string `json:"integrationDefinitionId"`

	Description string `json:"description"`

	Config map[string]interface{} `json:"config"`

	OffsiteComplete bool `json:"offsiteComplete"`

	Jobs IntegrationInstanceValuesJobsIntegrationJobsResult `json:"jobs"`

	InstanceRelationship IntegrationInstanceRelationship `json:"instanceRelationship"`
}

func (v *GetIntegrationInstanceIntegrationInstance) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetIntegrationInstanceIntegrationInstance) __premarshalJSON() (*__premarshalGetIntegrationInstanceIntegrationInstance, error) {
	var retval __premarshalGetIntegrationInstanceIntegrationInstance

	retval.Typename = v.Typename
	retval.Id = v.IntegrationInstanceValues.Id
	retval.Name = v.IntegrationInstanceValues.Name
	retval.AccountId = v.IntegrationInstanceValues.AccountId
	retval.SourceIntegrationInstanceId = v.IntegrationInstanceValues.SourceIntegrationInstanceId
	retval.PollingInterval = v.IntegrationInstanceValues.PollingInterval
	retval.PollingIntervalCronExpression = v.IntegrationInstanceValues.PollingIntervalCronExpression
	retval.IntegrationDefinition = v.IntegrationInstanceValues.IntegrationDefinition
	retval.IntegrationDefinitionId = v.IntegrationInstanceValues.IntegrationDefinitionId
	retval.Description = v.IntegrationInstanceValues.Description
	retval.Config = v.IntegrationInstanceValues.Config
	retval.OffsiteComplete = v.IntegrationInstanceValues.OffsiteComplete
	retval.Jobs = v.IntegrationInstanceValues.Jobs
	retval.InstanceRelationship = v.IntegrationInstanceValues.InstanceRelationship
	return &retval, nil
}

// GetIntegrationInstanceResponse is returned by GetIntegrationInstance on success.
type GetIntegrationInstanceResponse struct {
	IntegrationInstance GetIntegrationInstanceIntegrationInstance `json:"integrationInstance"`
}

// GetIntegrationInstance returns GetIntegrationInstanceResponse.IntegrationInstance, and is useful for accessing the field via an interface.
func (v *GetIntegrationInstanceResponse) GetIntegrationInstance() GetIntegrationInstanceIntegrationInstance {
	return v.IntegrationInstance
}

// IntegrationDefinition includes the requested fields of the GraphQL type IntegrationDefinition.
type IntegrationDefinition struct {
	Id               string                                         `json:"id"`
	IntegrationType  string                                         `json:"integrationType"`
	IntegrationClass []string                                       `json:"integrationClass"`
	Name             string                                         `json:"name"`
	RepoWebLink      string                                         `json:"repoWebLink"`
	Title            string                                         `json:"title"`
	ConfigFields     []IntegrationDefinitionConfigFieldsConfigField `json:"configFields"`
}

// GetId returns IntegrationDefinition.Id, and is useful for accessing the field via an interface.
func (v *IntegrationDefinition) GetId() string { return v.Id }

// GetIntegrationType returns IntegrationDefinition.IntegrationType, and is useful for accessing the field via an interface.
func (v *IntegrationDefinition) GetIntegrationType() string { return v.IntegrationType }

// GetIntegrationClass returns IntegrationDefinition.IntegrationClass, and is useful for accessing the field via an interface.
func (v *IntegrationDefinition) GetIntegrationClass() []string { return v.IntegrationClass }

// GetName returns IntegrationDefinition.Name, and is useful for accessing the field via an interface.
func (v *IntegrationDefinition) GetName() string { return v.Name }

// GetRepoWebLink returns IntegrationDefinition.RepoWebLink, and is useful for accessing the field via an interface.
func (v *IntegrationDefinition) GetRepoWebLink() string { return v.RepoWebLink }

// GetTitle returns IntegrationDefinition.Title, and is useful for accessing the field via an interface.
func (v *IntegrationDefinition) GetTitle() string { return v.Title }

// GetConfigFields returns IntegrationDefinition.ConfigFields, and is useful for accessing the field via an interface.
func (v *IntegrationDefinition) GetConfigFields() []IntegrationDefinitionConfigFieldsConfigField {
	return v.ConfigFields
}

// IntegrationDefinitionConfigFieldsConfigField includes the requested fields of the GraphQL type ConfigField.
type IntegrationDefinitionConfigFieldsConfigField struct {
	Key string `json:"key"`
}

// GetKey returns IntegrationDefinitionConfigFieldsConfigField.Key, and is useful for accessing the field via an interface.
func (v *IntegrationDefinitionConfigFieldsConfigField) GetKey() string { return v.Key }

// IntegrationDefinitionsIntegrationDefinitionsListIntegrationDefinitionsResult includes the requested fields of the GraphQL type ListIntegrationDefinitionsResult.
type IntegrationDefinitionsIntegrationDefinitionsListIntegrationDefinitionsResult struct {
	Definitions []IntegrationDefinition `json:"definitions"`
	PageInfo    PageInfo                `json:"pageInfo"`
}

// GetDefinitions returns IntegrationDefinitionsIntegrationDefinitionsListIntegrationDefinitionsResult.Definitions, and is useful for accessing the field via an interface.
func (v *IntegrationDefinitionsIntegrationDefinitionsListIntegrationDefinitionsResult) GetDefinitions() []IntegrationDefinition {
	return v.Definitions
}

// GetPageInfo returns IntegrationDefinitionsIntegrationDefinitionsListIntegrationDefinitionsResult.PageInfo, and is useful for accessing the field via an interface.
func (v *IntegrationDefinitionsIntegrationDefinitionsListIntegrationDefinitionsResult) GetPageInfo() PageInfo {
	return v.PageInfo
}

// IntegrationDefinitionsResponse is returned by IntegrationDefinitions on success.
type IntegrationDefinitionsResponse struct {
	IntegrationDefinitions IntegrationDefinitionsIntegrationDefinitionsListIntegrationDefinitionsResult `json:"integrationDefinitions"`
}

// GetIntegrationDefinitions returns IntegrationDefinitionsResponse.IntegrationDefinitions, and is useful for accessing the field via an interface.
func (v *IntegrationDefinitionsResponse) GetIntegrationDefinitions() IntegrationDefinitionsIntegrationDefinitionsListIntegrationDefinitionsResult {
	return v.IntegrationDefinitions
}

// IntegrationEvent includes the requested fields of the GraphQL type IntegrationEvent.
type IntegrationEvent struct {
	Id          string `json:"id"`
	JobId       string `json:"jobId"`
	Name        string `json:"name"`
	Description string `json:"description"`
	CreateDate  int    `json:"createDate"`
}

// GetId returns IntegrationEvent.Id, and is useful for accessing the field via an interface.
func (v *IntegrationEvent) GetId() string { return v.Id }

// GetJobId returns IntegrationEvent.JobId, and is useful for accessing the field via an interface.
func (v *IntegrationEvent) GetJobId() string { return v.JobId }

// GetName returns IntegrationEvent.Name, and is useful for accessing the field via an interface.
func (v *IntegrationEvent) GetName() string { return v.Name }

// GetDescription returns IntegrationEvent.Description, and is useful for accessing the field via an interface.
func (v *IntegrationEvent) GetDescription() string { return v.Description }

// GetCreateDate returns IntegrationEvent.CreateDate, and is useful for accessing the field via an interface.
func (v *IntegrationEvent) GetCreateDate() int { return v.CreateDate }

// IntegrationInstance includes the requested fields of the GraphQL type IntegrationInstance.
type IntegrationInstance struct {
	Id                      string `json:"id"`
	Name                    string `json:"name"`
	Description             string `json:"description"`
	IntegrationDefinitionId string `json:"integrationDefinitionId"`
}

// GetId returns IntegrationInstance.Id, and is useful for accessing the field via an interface.
func (v *IntegrationInstance) GetId() string { return v.Id }

// GetName returns IntegrationInstance.Name, and is useful for accessing the field via an interface.
func (v *IntegrationInstance) GetName() string { return v.Name }

// GetDescription returns IntegrationInstance.Description, and is useful for accessing the field via an interface.
func (v *IntegrationInstance) GetDescription() string { return v.Description }

// GetIntegrationDefinitionId returns IntegrationInstance.IntegrationDefinitionId, and is useful for accessing the field via an interface.
func (v *IntegrationInstance) GetIntegrationDefinitionId() string { return v.IntegrationDefinitionId }

// IntegrationInstanceJobValues includes the GraphQL fields of IntegrationJob requested by the fragment IntegrationInstanceJobValues.
type IntegrationInstanceJobValues struct {
	Id                    string               `json:"id"`
	Status                IntegrationJobStatus `json:"status"`
	IntegrationInstanceId string               `json:"integrationInstanceId"`
	CreateDate            int                  `json:"createDate"`
	EndDate               int                  `json:"endDate"`
	ErrorsOccurred        bool                 `json:"errorsOccurred"`
	Typename              string               `json:"__typename"`
}

// GetId returns IntegrationInstanceJobValues.Id, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceJobValues) GetId() string { return v.Id }

// GetStatus returns IntegrationInstanceJobValues.Status, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceJobValues) GetStatus() IntegrationJobStatus { return v.Status }

// GetIntegrationInstanceId returns IntegrationInstanceJobValues.IntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceJobValues) GetIntegrationInstanceId() string {
	return v.IntegrationInstanceId
}

// GetCreateDate returns IntegrationInstanceJobValues.CreateDate, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceJobValues) GetCreateDate() int { return v.CreateDate }

// GetEndDate returns IntegrationInstanceJobValues.EndDate, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceJobValues) GetEndDate() int { return v.EndDate }

// GetErrorsOccurred returns IntegrationInstanceJobValues.ErrorsOccurred, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceJobValues) GetErrorsOccurred() bool { return v.ErrorsOccurred }

// GetTypename returns IntegrationInstanceJobValues.Typename, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceJobValues) GetTypename() string { return v.Typename }

type IntegrationInstanceRelationship string

const (
	IntegrationInstanceRelationshipParent     IntegrationInstanceRelationship = "PARENT"
	IntegrationInstanceRelationshipChild      IntegrationInstanceRelationship = "CHILD"
	IntegrationInstanceRelationshipStandalone IntegrationInstanceRelationship = "STANDALONE"
)

// IntegrationInstanceValues includes the GraphQL fields of IntegrationInstance requested by the fragment IntegrationInstanceValues.
type IntegrationInstanceValues struct {
	Id                            string                                             `json:"id"`
	Name                          string                                             `json:"name"`
	AccountId                     string                                             `json:"accountId"`
	SourceIntegrationInstanceId   string                                             `json:"sourceIntegrationInstanceId"`
	PollingInterval               IntegrationPollingInterval                         `json:"pollingInterval"`
	PollingIntervalCronExpression PollingIntervalCronExpression                      `json:"pollingIntervalCronExpression"`
	IntegrationDefinition         IntegrationInstanceValuesIntegrationDefinition     `json:"integrationDefinition"`
	IntegrationDefinitionId       string                                             `json:"integrationDefinitionId"`
	Description                   string                                             `json:"description"`
	Config                        map[string]interface{}                             `json:"config"`
	OffsiteComplete               bool                                               `json:"offsiteComplete"`
	Jobs                          IntegrationInstanceValuesJobsIntegrationJobsResult `json:"jobs"`
	InstanceRelationship          IntegrationInstanceRelationship                    `json:"instanceRelationship"`
	Typename                      string                                             `json:"__typename"`
}

// GetId returns IntegrationInstanceValues.Id, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetId() string { return v.Id }

// GetName returns IntegrationInstanceValues.Name, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetName() string { return v.Name }

// GetAccountId returns IntegrationInstanceValues.AccountId, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetAccountId() string { return v.AccountId }

// GetSourceIntegrationInstanceId returns IntegrationInstanceValues.SourceIntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetSourceIntegrationInstanceId() string {
	return v.SourceIntegrationInstanceId
}

// GetPollingInterval returns IntegrationInstanceValues.PollingInterval, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetPollingInterval() IntegrationPollingInterval {
	return v.PollingInterval
}

// GetPollingIntervalCronExpression returns IntegrationInstanceValues.PollingIntervalCronExpression, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetPollingIntervalCronExpression() PollingIntervalCronExpression {
	return v.PollingIntervalCronExpression
}

// GetIntegrationDefinition returns IntegrationInstanceValues.IntegrationDefinition, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetIntegrationDefinition() IntegrationInstanceValuesIntegrationDefinition {
	return v.IntegrationDefinition
}

// GetIntegrationDefinitionId returns IntegrationInstanceValues.IntegrationDefinitionId, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetIntegrationDefinitionId() string {
	return v.IntegrationDefinitionId
}

// GetDescription returns IntegrationInstanceValues.Description, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetDescription() string { return v.Description }

// GetConfig returns IntegrationInstanceValues.Config, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetConfig() map[string]interface{} { return v.Config }

// GetOffsiteComplete returns IntegrationInstanceValues.OffsiteComplete, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetOffsiteComplete() bool { return v.OffsiteComplete }

// GetJobs returns IntegrationInstanceValues.Jobs, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetJobs() IntegrationInstanceValuesJobsIntegrationJobsResult {
	return v.Jobs
}

// GetInstanceRelationship returns IntegrationInstanceValues.InstanceRelationship, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetInstanceRelationship() IntegrationInstanceRelationship {
	return v.InstanceRelationship
}

// GetTypename returns IntegrationInstanceValues.Typename, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValues) GetTypename() string { return v.Typename }

// IntegrationInstanceValuesIntegrationDefinition includes the requested fields of the GraphQL type IntegrationDefinition.
type IntegrationInstanceValuesIntegrationDefinition struct {
	Name            string `json:"name"`
	IntegrationType string `json:"integrationType"`
	Typename        string `json:"__typename"`
}

// GetName returns IntegrationInstanceValuesIntegrationDefinition.Name, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesIntegrationDefinition) GetName() string { return v.Name }

// GetIntegrationType returns IntegrationInstanceValuesIntegrationDefinition.IntegrationType, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesIntegrationDefinition) GetIntegrationType() string {
	return v.IntegrationType
}

// GetTypename returns IntegrationInstanceValuesIntegrationDefinition.Typename, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesIntegrationDefinition) GetTypename() string { return v.Typename }

// IntegrationInstanceValuesJobsIntegrationJobsResult includes the requested fields of the GraphQL type IntegrationJobsResult.
type IntegrationInstanceValuesJobsIntegrationJobsResult struct {
	Jobs     []IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob `json:"jobs"`
	Typename string                                                                 `json:"__typename"`
}

// GetJobs returns IntegrationInstanceValuesJobsIntegrationJobsResult.Jobs, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesJobsIntegrationJobsResult) GetJobs() []IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob {
	return v.Jobs
}

// GetTypename returns IntegrationInstanceValuesJobsIntegrationJobsResult.Typename, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesJobsIntegrationJobsResult) GetTypename() string { return v.Typename }

// IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob includes the requested fields of the GraphQL type IntegrationJob.
type IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob struct {
	IntegrationInstanceJobValues `json:"-"`
	Typename                     string `json:"__typename"`
}

// GetTypename returns IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob.Typename, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob) GetTypename() string {
	return v.Typename
}

// GetId returns IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob.Id, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob) GetId() string {
	return v.IntegrationInstanceJobValues.Id
}

// GetStatus returns IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob.Status, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob) GetStatus() IntegrationJobStatus {
	return v.IntegrationInstanceJobValues.Status
}

// GetIntegrationInstanceId returns IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob.IntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob) GetIntegrationInstanceId() string {
	return v.IntegrationInstanceJobValues.IntegrationInstanceId
}

// GetCreateDate returns IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob.CreateDate, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob) GetCreateDate() int {
	return v.IntegrationInstanceJobValues.CreateDate
}

// GetEndDate returns IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob.EndDate, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob) GetEndDate() int {
	return v.IntegrationInstanceJobValues.EndDate
}

// GetErrorsOccurred returns IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob.ErrorsOccurred, and is useful for accessing the field via an interface.
func (v *IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob) GetErrorsOccurred() bool {
	return v.IntegrationInstanceJobValues.ErrorsOccurred
}

func (v *IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob
		graphql.NoUnmarshalJSON
	}
	firstPass.IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.IntegrationInstanceJobValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalIntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob struct {
	Typename string `json:"__typename"`

	Id string `json:"id"`

	Status IntegrationJobStatus `json:"status"`

	IntegrationInstanceId string `json:"integrationInstanceId"`

	CreateDate int `json:"createDate"`

	EndDate int `json:"endDate"`

	ErrorsOccurred bool `json:"errorsOccurred"`
}

func (v *IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *IntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob) __premarshalJSON() (*__premarshalIntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob, error) {
	var retval __premarshalIntegrationInstanceValuesJobsIntegrationJobsResultJobsIntegrationJob

	retval.Typename = v.Typename
	retval.Id = v.IntegrationInstanceJobValues.Id
	retval.Status = v.IntegrationInstanceJobValues.Status
	retval.IntegrationInstanceId = v.IntegrationInstanceJobValues.IntegrationInstanceId
	retval.CreateDate = v.IntegrationInstanceJobValues.CreateDate
	retval.EndDate = v.IntegrationInstanceJobValues.EndDate
	retval.ErrorsOccurred = v.IntegrationInstanceJobValues.ErrorsOccurred
	return &retval, nil
}

// IntegrationJob includes the requested fields of the GraphQL type IntegrationJob.
type IntegrationJob struct {
	Id                    string               `json:"id"`
	CreateDate            int                  `json:"createDate"`
	EndDate               int                  `json:"endDate"`
	ErrorsOccurred        bool                 `json:"errorsOccurred"`
	Status                IntegrationJobStatus `json:"status"`
	IntegrationInstanceId string               `json:"integrationInstanceId"`
}

// GetId returns IntegrationJob.Id, and is useful for accessing the field via an interface.
func (v *IntegrationJob) GetId() string { return v.Id }

// GetCreateDate returns IntegrationJob.CreateDate, and is useful for accessing the field via an interface.
func (v *IntegrationJob) GetCreateDate() int { return v.CreateDate }

// GetEndDate returns IntegrationJob.EndDate, and is useful for accessing the field via an interface.
func (v *IntegrationJob) GetEndDate() int { return v.EndDate }

// GetErrorsOccurred returns IntegrationJob.ErrorsOccurred, and is useful for accessing the field via an interface.
func (v *IntegrationJob) GetErrorsOccurred() bool { return v.ErrorsOccurred }

// GetStatus returns IntegrationJob.Status, and is useful for accessing the field via an interface.
func (v *IntegrationJob) GetStatus() IntegrationJobStatus { return v.Status }

// GetIntegrationInstanceId returns IntegrationJob.IntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *IntegrationJob) GetIntegrationInstanceId() string { return v.IntegrationInstanceId }

type IntegrationJobStatus string

const (
	IntegrationJobStatusInProgress     IntegrationJobStatus = "IN_PROGRESS"
	IntegrationJobStatusCompleted      IntegrationJobStatus = "COMPLETED"
	IntegrationJobStatusFailed         IntegrationJobStatus = "FAILED"
	IntegrationJobStatusPersistingData IntegrationJobStatus = "PERSISTING_DATA"
)

type IntegrationPollingInterval string

const (
	IntegrationPollingIntervalDisabled      IntegrationPollingInterval = "DISABLED"
	IntegrationPollingIntervalThirtyMinutes IntegrationPollingInterval = "THIRTY_MINUTES"
	IntegrationPollingIntervalOneHour       IntegrationPollingInterval = "ONE_HOUR"
	IntegrationPollingIntervalFourHours     IntegrationPollingInterval = "FOUR_HOURS"
	IntegrationPollingIntervalEightHours    IntegrationPollingInterval = "EIGHT_HOURS"
	IntegrationPollingIntervalTwelveHours   IntegrationPollingInterval = "TWELVE_HOURS"
	IntegrationPollingIntervalOneDay        IntegrationPollingInterval = "ONE_DAY"
	IntegrationPollingIntervalOneWeek       IntegrationPollingInterval = "ONE_WEEK"
)

type IntegrationPollingIntervalCronExpressionInput struct {
	Hour      int `json:"hour"`
	DayOfWeek int `json:"dayOfWeek"`
}

// GetHour returns IntegrationPollingIntervalCronExpressionInput.Hour, and is useful for accessing the field via an interface.
func (v *IntegrationPollingIntervalCronExpressionInput) GetHour() int { return v.Hour }

// GetDayOfWeek returns IntegrationPollingIntervalCronExpressionInput.DayOfWeek, and is useful for accessing the field via an interface.
func (v *IntegrationPollingIntervalCronExpressionInput) GetDayOfWeek() int { return v.DayOfWeek }

// InvokeInstanceInvokeIntegrationInstanceInvocationResult includes the requested fields of the GraphQL type InvocationResult.
type InvokeInstanceInvokeIntegrationInstanceInvocationResult struct {
	Success          bool   `json:"success"`
	IntegrationJobId string `json:"integrationJobId"`
}

// GetSuccess returns InvokeInstanceInvokeIntegrationInstanceInvocationResult.Success, and is useful for accessing the field via an interface.
func (v *InvokeInstanceInvokeIntegrationInstanceInvocationResult) GetSuccess() bool { return v.Success }

// GetIntegrationJobId returns InvokeInstanceInvokeIntegrationInstanceInvocationResult.IntegrationJobId, and is useful for accessing the field via an interface.
func (v *InvokeInstanceInvokeIntegrationInstanceInvocationResult) GetIntegrationJobId() string {
	return v.IntegrationJobId
}

// InvokeInstanceResponse is returned by InvokeInstance on success.
type InvokeInstanceResponse struct {
	InvokeIntegrationInstance InvokeInstanceInvokeIntegrationInstanceInvocationResult `json:"invokeIntegrationInstance"`
}

// GetInvokeIntegrationInstance returns InvokeInstanceResponse.InvokeIntegrationInstance, and is useful for accessing the field via an interface.
func (v *InvokeInstanceResponse) GetInvokeIntegrationInstance() InvokeInstanceInvokeIntegrationInstanceInvocationResult {
	return v.InvokeIntegrationInstance
}

// ListEventsIntegrationEventsIntegrationEventsResult includes the requested fields of the GraphQL type IntegrationEventsResult.
type ListEventsIntegrationEventsIntegrationEventsResult struct {
	Events   []IntegrationEvent `json:"events"`
	PageInfo PageInfo           `json:"pageInfo"`
}

// GetEvents returns ListEventsIntegrationEventsIntegrationEventsResult.Events, and is useful for accessing the field via an interface.
func (v *ListEventsIntegrationEventsIntegrationEventsResult) GetEvents() []IntegrationEvent {
	return v.Events
}

// GetPageInfo returns ListEventsIntegrationEventsIntegrationEventsResult.PageInfo, and is useful for accessing the field via an interface.
func (v *ListEventsIntegrationEventsIntegrationEventsResult) GetPageInfo() PageInfo {
	return v.PageInfo
}

// ListEventsResponse is returned by ListEvents on success.
type ListEventsResponse struct {
	IntegrationEvents ListEventsIntegrationEventsIntegrationEventsResult `json:"integrationEvents"`
}

// GetIntegrationEvents returns ListEventsResponse.IntegrationEvents, and is useful for accessing the field via an interface.
func (v *ListEventsResponse) GetIntegrationEvents() ListEventsIntegrationEventsIntegrationEventsResult {
	return v.IntegrationEvents
}

// ListIntegrationInstancesIntegrationInstancesListIntegrationInstancesResult includes the requested fields of the GraphQL type ListIntegrationInstancesResult.
type ListIntegrationInstancesIntegrationInstancesListIntegrationInstancesResult struct {
	Instances []IntegrationInstance `json:"instances"`
	PageInfo  PageInfo              `json:"pageInfo"`
}

// GetInstances returns ListIntegrationInstancesIntegrationInstancesListIntegrationInstancesResult.Instances, and is useful for accessing the field via an interface.
func (v *ListIntegrationInstancesIntegrationInstancesListIntegrationInstancesResult) GetInstances() []IntegrationInstance {
	return v.Instances
}

// GetPageInfo returns ListIntegrationInstancesIntegrationInstancesListIntegrationInstancesResult.PageInfo, and is useful for accessing the field via an interface.
func (v *ListIntegrationInstancesIntegrationInstancesListIntegrationInstancesResult) GetPageInfo() PageInfo {
	return v.PageInfo
}

// ListIntegrationInstancesResponse is returned by ListIntegrationInstances on success.
type ListIntegrationInstancesResponse struct {
	IntegrationInstances ListIntegrationInstancesIntegrationInstancesListIntegrationInstancesResult `json:"integrationInstances"`
}

// GetIntegrationInstances returns ListIntegrationInstancesResponse.IntegrationInstances, and is useful for accessing the field via an interface.
func (v *ListIntegrationInstancesResponse) GetIntegrationInstances() ListIntegrationInstancesIntegrationInstancesListIntegrationInstancesResult {
	return v.IntegrationInstances
}

// ListJobsIntegrationJobsIntegrationJobsResult includes the requested fields of the GraphQL type IntegrationJobsResult.
type ListJobsIntegrationJobsIntegrationJobsResult struct {
	Jobs     []IntegrationJob `json:"jobs"`
	PageInfo PageInfo         `json:"pageInfo"`
}

// GetJobs returns ListJobsIntegrationJobsIntegrationJobsResult.Jobs, and is useful for accessing the field via an interface.
func (v *ListJobsIntegrationJobsIntegrationJobsResult) GetJobs() []IntegrationJob { return v.Jobs }

// GetPageInfo returns ListJobsIntegrationJobsIntegrationJobsResult.PageInfo, and is useful for accessing the field via an interface.
func (v *ListJobsIntegrationJobsIntegrationJobsResult) GetPageInfo() PageInfo { return v.PageInfo }

// ListJobsResponse is returned by ListJobs on success.
type ListJobsResponse struct {
	IntegrationJobs ListJobsIntegrationJobsIntegrationJobsResult `json:"integrationJobs"`
}

// GetIntegrationJobs returns ListJobsResponse.IntegrationJobs, and is useful for accessing the field via an interface.
func (v *ListJobsResponse) GetIntegrationJobs() ListJobsIntegrationJobsIntegrationJobsResult {
	return v.IntegrationJobs
}

// ListVerticesV2ListVerticesV2ListVerticesResponse includes the requested fields of the GraphQL type ListVerticesResponse.
type ListVerticesV2ListVerticesV2ListVerticesResponse struct {
	Vertices []ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex `json:"vertices"`
	PageInfo PageInfo                                                         `json:"pageInfo"`
	Total    int                                                              `json:"total"`
}

// GetVertices returns ListVerticesV2ListVerticesV2ListVerticesResponse.Vertices, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponse) GetVertices() []ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex {
	return v.Vertices
}

// GetPageInfo returns ListVerticesV2ListVerticesV2ListVerticesResponse.PageInfo, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponse) GetPageInfo() PageInfo { return v.PageInfo }

// GetTotal returns ListVerticesV2ListVerticesV2ListVerticesResponse.Total, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponse) GetTotal() int { return v.Total }

// ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex includes the requested fields of the GraphQL type Vertex.
type ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex struct {
	Id         string                                                                                   `json:"id"`
	Properties map[string]interface{}                                                                   `json:"properties"`
	Entity     ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties `json:"entity"`
}

// GetId returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex.Id, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex) GetId() string { return v.Id }

// GetProperties returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex.Properties, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex) GetProperties() map[string]interface{} {
	return v.Properties
}

// GetEntity returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex.Entity, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex) GetEntity() ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties {
	return v.Entity
}

// ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties includes the requested fields of the GraphQL type EntityCoreProperties.
type ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties struct {
	Id              string   `json:"_id"`
	Class           []string `json:"_class"`
	Type            []string `json:"_type"`
	IntegrationName string   `json:"_integrationName"`
	DisplayName     string   `json:"displayName"`
}

// GetId returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties.Id, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties) GetId() string {
	return v.Id
}

// GetClass returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties.Class, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties) GetClass() []string {
	return v.Class
}

// GetType returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties.Type, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties) GetType() []string {
	return v.Type
}

// GetIntegrationName returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties.IntegrationName, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties) GetIntegrationName() string {
	return v.IntegrationName
}

// GetDisplayName returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties.DisplayName, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties) GetDisplayName() string {
	return v.DisplayName
}

// ListVerticesV2Response is returned by ListVerticesV2 on success.
type ListVerticesV2Response struct {
	ListVerticesV2 ListVerticesV2ListVerticesV2ListVerticesResponse `json:"listVerticesV2"`
}

// GetListVerticesV2 returns ListVerticesV2Response.ListVerticesV2, and is useful for accessing the field via an interface.
func (v *ListVerticesV2Response) GetListVerticesV2() ListVerticesV2ListVerticesV2ListVerticesResponse {
	return v.ListVerticesV2
}

// PageInfo includes the requested fields of the GraphQL type PageInfo.
type PageInfo struct {
	EndCursor   string `json:"endCursor"`
	HasNextPage bool   `json:"hasNextPage"`
}

// GetEndCursor returns PageInfo.EndCursor, and is useful for accessing the field via an interface.
func (v *PageInfo) GetEndCursor() string { return v.EndCursor }

// GetHasNextPage returns PageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *PageInfo) GetHasNextPage() bool { return v.HasNextPage }

// PollingIntervalCronExpression includes the requested fields of the GraphQL type IntegrationPollingIntervalCronExpression.
type PollingIntervalCronExpression struct {
	Hour      int    `json:"hour"`
	DayOfWeek int    `json:"dayOfWeek"`
	Typename  string `json:"__typename"`
}

// GetHour returns PollingIntervalCronExpression.Hour, and is useful for accessing the field via an interface.
func (v *PollingIntervalCronExpression) GetHour() int { return v.Hour }

// GetDayOfWeek returns PollingIntervalCronExpression.DayOfWeek, and is useful for accessing the field via an interface.
func (v *PollingIntervalCronExpression) GetDayOfWeek() int { return v.DayOfWeek }

// GetTypename returns PollingIntervalCronExpression.Typename, and is useful for accessing the field via an interface.
func (v *PollingIntervalCronExpression) GetTypename() string { return v.Typename }

// QueryJupiterOneQueryV1QueryV1Response includes the requested fields of the GraphQL type QueryV1Response.
type QueryJupiterOneQueryV1QueryV1Response struct {
	Cursor     string                 `json:"cursor"`
	Data       map[string]interface{} `json:"data"`
	TotalCount int                    `json:"totalCount"`
	Type       string                 `json:"type"`
	Url        string                 `json:"url"`
}

// GetCursor returns QueryJupiterOneQueryV1QueryV1Response.Cursor, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneQueryV1QueryV1Response) GetCursor() string { return v.Cursor }

// GetData returns QueryJupiterOneQueryV1QueryV1Response.Data, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneQueryV1QueryV1Response) GetData() map[string]interface{} { return v.Data }

// GetTotalCount returns QueryJupiterOneQueryV1QueryV1Response.TotalCount, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneQueryV1QueryV1Response) GetTotalCount() int { return v.TotalCount }

// GetType returns QueryJupiterOneQueryV1QueryV1Response.Type, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneQueryV1QueryV1Response) GetType() string { return v.Type }

// GetUrl returns QueryJupiterOneQueryV1QueryV1Response.Url, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneQueryV1QueryV1Response) GetUrl() string { return v.Url }

// QueryJupiterOneResponse is returned by QueryJupiterOne on success.
type QueryJupiterOneResponse struct {
	QueryV1 QueryJupiterOneQueryV1QueryV1Response `json:"queryV1"`
}

// GetQueryV1 returns QueryJupiterOneResponse.QueryV1, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneResponse) GetQueryV1() QueryJupiterOneQueryV1QueryV1Response {
	return v.QueryV1
}

type QueryV1Flags struct {
	AllPages           bool `json:"allPages"`
	ComputedProperties bool `json:"computedProperties"`
	RowMetadata        bool `json:"rowMetadata"`
	VariableResultSize bool `json:"variableResultSize"`
}

// GetAllPages returns QueryV1Flags.AllPages, and is useful for accessing the field via an interface.
func (v *QueryV1Flags) GetAllPages() bool { return v.AllPages }

// GetComputedProperties returns QueryV1Flags.ComputedProperties, and is useful for accessing the field via an interface.
func (v *QueryV1Flags) GetComputedProperties() bool { return v.ComputedProperties }

// GetRowMetadata returns QueryV1Flags.RowMetadata, and is useful for accessing the field via an interface.
func (v *QueryV1Flags) GetRowMetadata() bool { return v.RowMetadata }

// GetVariableResultSize returns QueryV1Flags.VariableResultSize, and is useful for accessing the field via an interface.
func (v *QueryV1Flags) GetVariableResultSize() bool { return v.VariableResultSize }

type SortOrder string

const (
	SortOrderAsc  SortOrder = "ASC"
	SortOrderDesc SortOrder = "DESC"
)

type UpdateIntegrationInstanceInput struct {
	Name                          *string                                        `json:"name,omitempty"`
	SourceIntegrationInstanceId   *string                                        `json:"sourceIntegrationInstanceId,omitempty"`
	PollingInterval               *IntegrationPollingInterval                    `json:"pollingInterval,omitempty"`
	PollingIntervalCronExpression *IntegrationPollingIntervalCronExpressionInput `json:"pollingIntervalCronExpression,omitempty"`
	Description                   *string                                        `json:"description,omitempty"`
	Config                        *map[string]interface{}                        `json:"config,omitempty"`
	OffsiteComplete               *bool                                          `json:"offsiteComplete,omitempty"`
}

// GetName returns UpdateIntegrationInstanceInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceInput) GetName() *string { return v.Name }

// GetSourceIntegrationInstanceId returns UpdateIntegrationInstanceInput.SourceIntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceInput) GetSourceIntegrationInstanceId() *string {
	return v.SourceIntegrationInstanceId
}

// GetPollingInterval returns UpdateIntegrationInstanceInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceInput) GetPollingInterval() *IntegrationPollingInterval {
	return v.PollingInterval
}

// GetPollingIntervalCronExpression returns UpdateIntegrationInstanceInput.PollingIntervalCronExpression, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceInput) GetPollingIntervalCronExpression() *IntegrationPollingIntervalCronExpressionInput {
	return v.PollingIntervalCronExpression
}

// GetDescription returns UpdateIntegrationInstanceInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceInput) GetDescription() *string { return v.Description }

// GetConfig returns UpdateIntegrationInstanceInput.Config, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceInput) GetConfig() *map[string]interface{} { return v.Config }

// GetOffsiteComplete returns UpdateIntegrationInstanceInput.OffsiteComplete, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceInput) GetOffsiteComplete() *bool { return v.OffsiteComplete }

// UpdateIntegrationInstanceResponse is returned by UpdateIntegrationInstance on success.
type UpdateIntegrationInstanceResponse struct {
	UpdateIntegrationInstance UpdateIntegrationInstanceUpdateIntegrationInstance `json:"updateIntegrationInstance"`
}

// GetUpdateIntegrationInstance returns UpdateIntegrationInstanceResponse.UpdateIntegrationInstance, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceResponse) GetUpdateIntegrationInstance() UpdateIntegrationInstanceUpdateIntegrationInstance {
	return v.UpdateIntegrationInstance
}

// UpdateIntegrationInstanceUpdateIntegrationInstance includes the requested fields of the GraphQL type IntegrationInstance.
type UpdateIntegrationInstanceUpdateIntegrationInstance struct {
	Id                            string                                                                                                                  `json:"id"`
	Name                          string                                                                                                                  `json:"name"`
	PollingInterval               IntegrationPollingInterval                                                                                              `json:"pollingInterval"`
	PollingIntervalCronExpression UpdateIntegrationInstanceUpdateIntegrationInstancePollingIntervalCronExpressionIntegrationPollingIntervalCronExpression `json:"pollingIntervalCronExpression"`
	IntegrationDefinitionId       string                                                                                                                  `json:"integrationDefinitionId"`
	Description                   string                                                                                                                  `json:"description"`
	Config                        map[string]interface{}                                                                                                  `json:"config"`
	OffsiteComplete               bool                                                                                                                    `json:"offsiteComplete"`
	Typename                      string                                                                                                                  `json:"__typename"`
}

// GetId returns UpdateIntegrationInstanceUpdateIntegrationInstance.Id, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstance) GetId() string { return v.Id }

// GetName returns UpdateIntegrationInstanceUpdateIntegrationInstance.Name, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstance) GetName() string { return v.Name }

// GetPollingInterval returns UpdateIntegrationInstanceUpdateIntegrationInstance.PollingInterval, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstance) GetPollingInterval() IntegrationPollingInterval {
	return v.PollingInterval
}

// GetPollingIntervalCronExpression returns UpdateIntegrationInstanceUpdateIntegrationInstance.PollingIntervalCronExpression, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstance) GetPollingIntervalCronExpression() UpdateIntegrationInstanceUpdateIntegrationInstancePollingIntervalCronExpressionIntegrationPollingIntervalCronExpression {
	return v.PollingIntervalCronExpression
}

// GetIntegrationDefinitionId returns UpdateIntegrationInstanceUpdateIntegrationInstance.IntegrationDefinitionId, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstance) GetIntegrationDefinitionId() string {
	return v.IntegrationDefinitionId
}

// GetDescription returns UpdateIntegrationInstanceUpdateIntegrationInstance.Description, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstance) GetDescription() string {
	return v.Description
}

// GetConfig returns UpdateIntegrationInstanceUpdateIntegrationInstance.Config, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstance) GetConfig() map[string]interface{} {
	return v.Config
}

// GetOffsiteComplete returns UpdateIntegrationInstanceUpdateIntegrationInstance.OffsiteComplete, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstance) GetOffsiteComplete() bool {
	return v.OffsiteComplete
}

// GetTypename returns UpdateIntegrationInstanceUpdateIntegrationInstance.Typename, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstance) GetTypename() string { return v.Typename }

// UpdateIntegrationInstanceUpdateIntegrationInstancePollingIntervalCronExpressionIntegrationPollingIntervalCronExpression includes the requested fields of the GraphQL type IntegrationPollingIntervalCronExpression.
type UpdateIntegrationInstanceUpdateIntegrationInstancePollingIntervalCronExpressionIntegrationPollingIntervalCronExpression struct {
	Hour      int    `json:"hour"`
	DayOfWeek int    `json:"dayOfWeek"`
	Typename  string `json:"__typename"`
}

// GetHour returns UpdateIntegrationInstanceUpdateIntegrationInstancePollingIntervalCronExpressionIntegrationPollingIntervalCronExpression.Hour, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstancePollingIntervalCronExpressionIntegrationPollingIntervalCronExpression) GetHour() int {
	return v.Hour
}

// GetDayOfWeek returns UpdateIntegrationInstanceUpdateIntegrationInstancePollingIntervalCronExpressionIntegrationPollingIntervalCronExpression.DayOfWeek, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstancePollingIntervalCronExpressionIntegrationPollingIntervalCronExpression) GetDayOfWeek() int {
	return v.DayOfWeek
}

// GetTypename returns UpdateIntegrationInstanceUpdateIntegrationInstancePollingIntervalCronExpressionIntegrationPollingIntervalCronExpression.Typename, and is useful for accessing the field via an interface.
func (v *UpdateIntegrationInstanceUpdateIntegrationInstancePollingIntervalCronExpressionIntegrationPollingIntervalCronExpression) GetTypename() string {
	return v.Typename
}

type VertexFilters struct {
	Id    string   `json:"_id"`
	Key   string   `json:"_key"`
	Type  []string `json:"_type"`
	Class []string `json:"_class"`
}

// GetId returns VertexFilters.Id, and is useful for accessing the field via an interface.
func (v *VertexFilters) GetId() string { return v.Id }

// GetKey returns VertexFilters.Key, and is useful for accessing the field via an interface.
func (v *VertexFilters) GetKey() string { return v.Key }

// GetType returns VertexFilters.Type, and is useful for accessing the field via an interface.
func (v *VertexFilters) GetType() []string { return v.Type }

// GetClass returns VertexFilters.Class, and is useful for accessing the field via an interface.
func (v *VertexFilters) GetClass() []string { return v.Class }

// VertexResponse is returned by Vertex on success.
type VertexResponse struct {
	Vertex VertexVertex `json:"vertex"`
}

// GetVertex returns VertexResponse.Vertex, and is useful for accessing the field via an interface.
func (v *VertexResponse) GetVertex() VertexVertex { return v.Vertex }

// VertexVertex includes the requested fields of the GraphQL type Vertex.
type VertexVertex struct {
	Edges      []VertexVertexEdgesEdge                `json:"edges"`
	Entity     VertexVertexEntityEntityCoreProperties `json:"entity"`
	Id         string                                 `json:"id"`
	Properties map[string]interface{}                 `json:"properties"`
}

// GetEdges returns VertexVertex.Edges, and is useful for accessing the field via an interface.
func (v *VertexVertex) GetEdges() []VertexVertexEdgesEdge { return v.Edges }

// GetEntity returns VertexVertex.Entity, and is useful for accessing the field via an interface.
func (v *VertexVertex) GetEntity() VertexVertexEntityEntityCoreProperties { return v.Entity }

// GetId returns VertexVertex.Id, and is useful for accessing the field via an interface.
func (v *VertexVertex) GetId() string { return v.Id }

// GetProperties returns VertexVertex.Properties, and is useful for accessing the field via an interface.
func (v *VertexVertex) GetProperties() map[string]interface{} { return v.Properties }

// VertexVertexEdgesEdge includes the requested fields of the GraphQL type Edge.
type VertexVertexEdgesEdge struct {
	FromVertexId string                                                      `json:"fromVertexId"`
	Id           string                                                      `json:"id"`
	Properties   map[string]interface{}                                      `json:"properties"`
	Relationship VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties `json:"relationship"`
	ToVertexId   string                                                      `json:"toVertexId"`
}

// GetFromVertexId returns VertexVertexEdgesEdge.FromVertexId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdge) GetFromVertexId() string { return v.FromVertexId }

// GetId returns VertexVertexEdgesEdge.Id, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdge) GetId() string { return v.Id }

// GetProperties returns VertexVertexEdgesEdge.Properties, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdge) GetProperties() map[string]interface{} { return v.Properties }

// GetRelationship returns VertexVertexEdgesEdge.Relationship, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdge) GetRelationship() VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties {
	return v.Relationship
}

// GetToVertexId returns VertexVertexEdgesEdge.ToVertexId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdge) GetToVertexId() string { return v.ToVertexId }

// VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties includes the requested fields of the GraphQL type RelationshipCoreProperties.
type VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties struct {
	Typename                string `json:"__typename"`
	AccountId               string `json:"_accountId"`
	BeginOn                 int    `json:"_beginOn"`
	Class                   string `json:"_class"`
	CreatedOn               int    `json:"_createdOn"`
	Deleted                 bool   `json:"_deleted"`
	EndOn                   int    `json:"_endOn"`
	FromEntityId            string `json:"_fromEntityId"`
	FromEntityKey           string `json:"_fromEntityKey"`
	Id                      string `json:"_id"`
	IntegrationDefinitionId string `json:"_integrationDefinitionId"`
	IntegrationInstanceId   string `json:"_integrationInstanceId"`
	IntegrationName         string `json:"_integrationName"`
	Key                     string `json:"_key"`
	Latest                  bool   `json:"_latest"`
	Scope                   string `json:"_scope"`
	Source                  string `json:"_source"`
	ToEntityId              string `json:"_toEntityId"`
	ToEntityKey             string `json:"_toEntityKey"`
	Type                    string `json:"_type"`
	Version                 int    `json:"_version"`
	DisplayName             string `json:"displayName"`
}

// GetTypename returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Typename, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetTypename() string {
	return v.Typename
}

// GetAccountId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.AccountId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetAccountId() string {
	return v.AccountId
}

// GetBeginOn returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.BeginOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetBeginOn() int {
	return v.BeginOn
}

// GetClass returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Class, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetClass() string {
	return v.Class
}

// GetCreatedOn returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.CreatedOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetCreatedOn() int {
	return v.CreatedOn
}

// GetDeleted returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Deleted, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetDeleted() bool {
	return v.Deleted
}

// GetEndOn returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.EndOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetEndOn() int { return v.EndOn }

// GetFromEntityId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.FromEntityId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetFromEntityId() string {
	return v.FromEntityId
}

// GetFromEntityKey returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.FromEntityKey, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetFromEntityKey() string {
	return v.FromEntityKey
}

// GetId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Id, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetId() string { return v.Id }

// GetIntegrationDefinitionId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.IntegrationDefinitionId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetIntegrationDefinitionId() string {
	return v.IntegrationDefinitionId
}

// GetIntegrationInstanceId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.IntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetIntegrationInstanceId() string {
	return v.IntegrationInstanceId
}

// GetIntegrationName returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.IntegrationName, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetIntegrationName() string {
	return v.IntegrationName
}

// GetKey returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Key, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetKey() string { return v.Key }

// GetLatest returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Latest, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetLatest() bool {
	return v.Latest
}

// GetScope returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Scope, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetScope() string {
	return v.Scope
}

// GetSource returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Source, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetSource() string {
	return v.Source
}

// GetToEntityId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.ToEntityId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetToEntityId() string {
	return v.ToEntityId
}

// GetToEntityKey returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.ToEntityKey, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetToEntityKey() string {
	return v.ToEntityKey
}

// GetType returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Type, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetType() string { return v.Type }

// GetVersion returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Version, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetVersion() int {
	return v.Version
}

// GetDisplayName returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.DisplayName, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetDisplayName() string {
	return v.DisplayName
}

// VertexVertexEntityEntityCoreProperties includes the requested fields of the GraphQL type EntityCoreProperties.
type VertexVertexEntityEntityCoreProperties struct {
	Typename                string   `json:"__typename"`
	AccountId               string   `json:"_accountId"`
	BeginOn                 int      `json:"_beginOn"`
	Class                   []string `json:"_class"`
	CreatedOn               int      `json:"_createdOn"`
	Deleted                 bool     `json:"_deleted"`
	EndOn                   int      `json:"_endOn"`
	Id                      string   `json:"_id"`
	IntegrationDefinitionId string   `json:"_integrationDefinitionId"`
	IntegrationInstanceId   string   `json:"_integrationInstanceId"`
	IntegrationName         string   `json:"_integrationName"`
	Key                     string   `json:"_key"`
	Latest                  bool     `json:"_latest"`
	Scope                   string   `json:"_scope"`
	Source                  string   `json:"_source"`
	Type                    []string `json:"_type"`
	Version                 int      `json:"_version"`
	DisplayName             string   `json:"displayName"`
}

// GetTypename returns VertexVertexEntityEntityCoreProperties.Typename, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetTypename() string { return v.Typename }

// GetAccountId returns VertexVertexEntityEntityCoreProperties.AccountId, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetAccountId() string { return v.AccountId }

// GetBeginOn returns VertexVertexEntityEntityCoreProperties.BeginOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetBeginOn() int { return v.BeginOn }

// GetClass returns VertexVertexEntityEntityCoreProperties.Class, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetClass() []string { return v.Class }

// GetCreatedOn returns VertexVertexEntityEntityCoreProperties.CreatedOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetCreatedOn() int { return v.CreatedOn }

// GetDeleted returns VertexVertexEntityEntityCoreProperties.Deleted, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetDeleted() bool { return v.Deleted }

// GetEndOn returns VertexVertexEntityEntityCoreProperties.EndOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetEndOn() int { return v.EndOn }

// GetId returns VertexVertexEntityEntityCoreProperties.Id, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetId() string { return v.Id }

// GetIntegrationDefinitionId returns VertexVertexEntityEntityCoreProperties.IntegrationDefinitionId, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetIntegrationDefinitionId() string {
	return v.IntegrationDefinitionId
}

// GetIntegrationInstanceId returns VertexVertexEntityEntityCoreProperties.IntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetIntegrationInstanceId() string {
	return v.IntegrationInstanceId
}

// GetIntegrationName returns VertexVertexEntityEntityCoreProperties.IntegrationName, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetIntegrationName() string {
	return v.IntegrationName
}

// GetKey returns VertexVertexEntityEntityCoreProperties.Key, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetKey() string { return v.Key }

// GetLatest returns VertexVertexEntityEntityCoreProperties.Latest, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetLatest() bool { return v.Latest }

// GetScope returns VertexVertexEntityEntityCoreProperties.Scope, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetScope() string { return v.Scope }

// GetSource returns VertexVertexEntityEntityCoreProperties.Source, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetSource() string { return v.Source }

// GetType returns VertexVertexEntityEntityCoreProperties.Type, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetType() []string { return v.Type }

// GetVersion returns VertexVertexEntityEntityCoreProperties.Version, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetVersion() int { return v.Version }

// GetDisplayName returns VertexVertexEntityEntityCoreProperties.DisplayName, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetDisplayName() string { return v.DisplayName }

// __CreateInstanceInput is used internally by genqlient
type __CreateInstanceInput struct {
	Instance CreateIntegrationInstanceInput `json:"instance"`
}

// GetInstance returns __CreateInstanceInput.Instance, and is useful for accessing the field via an interface.
func (v *__CreateInstanceInput) GetInstance() CreateIntegrationInstanceInput { return v.Instance }

// __DeleteIntegrationInstanceInput is used internally by genqlient
type __DeleteIntegrationInstanceInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteIntegrationInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteIntegrationInstanceInput) GetId() string { return v.Id }

// __GetIntegrationDefinitionInput is used internally by genqlient
type __GetIntegrationDefinitionInput struct {
	Id string `json:"id"`
}

// GetId returns __GetIntegrationDefinitionInput.Id, and is useful for accessing the field via an interface.
func (v *__GetIntegrationDefinitionInput) GetId() string { return v.Id }

// __GetIntegrationInstanceInput is used internally by genqlient
type __GetIntegrationInstanceInput struct {
	IntegrationInstanceId string `json:"integrationInstanceId"`
}

// GetIntegrationInstanceId returns __GetIntegrationInstanceInput.IntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *__GetIntegrationInstanceInput) GetIntegrationInstanceId() string {
	return v.IntegrationInstanceId
}

// __IntegrationDefinitionsInput is used internally by genqlient
type __IntegrationDefinitionsInput struct {
	Cursor string `json:"cursor"`
}

// GetCursor returns __IntegrationDefinitionsInput.Cursor, and is useful for accessing the field via an interface.
func (v *__IntegrationDefinitionsInput) GetCursor() string { return v.Cursor }

// __InvokeInstanceInput is used internally by genqlient
type __InvokeInstanceInput struct {
	Id string `json:"id"`
}

// GetId returns __InvokeInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *__InvokeInstanceInput) GetId() string { return v.Id }

// __ListEventsInput is used internally by genqlient
type __ListEventsInput struct {
	JobId                 string `json:"jobId"`
	IntegrationInstanceId string `json:"integrationInstanceId"`
	Cursor                string `json:"cursor"`
	Size                  int    `json:"size"`
}

// GetJobId returns __ListEventsInput.JobId, and is useful for accessing the field via an interface.
func (v *__ListEventsInput) GetJobId() string { return v.JobId }

// GetIntegrationInstanceId returns __ListEventsInput.IntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *__ListEventsInput) GetIntegrationInstanceId() string { return v.IntegrationInstanceId }

// GetCursor returns __ListEventsInput.Cursor, and is useful for accessing the field via an interface.
func (v *__ListEventsInput) GetCursor() string { return v.Cursor }

// GetSize returns __ListEventsInput.Size, and is useful for accessing the field via an interface.
func (v *__ListEventsInput) GetSize() int { return v.Size }

// __ListIntegrationInstancesInput is used internally by genqlient
type __ListIntegrationInstancesInput struct {
	Cursor string `json:"cursor"`
}

// GetCursor returns __ListIntegrationInstancesInput.Cursor, and is useful for accessing the field via an interface.
func (v *__ListIntegrationInstancesInput) GetCursor() string { return v.Cursor }

// __ListJobsInput is used internally by genqlient
type __ListJobsInput struct {
	IntegrationInstanceId string `json:"integrationInstanceId"`
	Cursor                string `json:"cursor"`
	Size                  int    `json:"size"`
}

// GetIntegrationInstanceId returns __ListJobsInput.IntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *__ListJobsInput) GetIntegrationInstanceId() string { return v.IntegrationInstanceId }

// GetCursor returns __ListJobsInput.Cursor, and is useful for accessing the field via an interface.
func (v *__ListJobsInput) GetCursor() string { return v.Cursor }

// GetSize returns __ListJobsInput.Size, and is useful for accessing the field via an interface.
func (v *__ListJobsInput) GetSize() int { return v.Size }

// __ListVerticesV2Input is used internally by genqlient
type __ListVerticesV2Input struct {
	Classes         []string               `json:"classes"`
	Types           []string               `json:"types"`
	After           string                 `json:"after"`
	Size            int                    `json:"size"`
	PropertyFilters map[string]interface{} `json:"propertyFilters"`
	FilterType      FilterType             `json:"filterType"`
	Search          string                 `json:"search"`
	Sort            []FieldSort            `json:"sort"`
}

// GetClasses returns __ListVerticesV2Input.Classes, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetClasses() []string { return v.Classes }

// GetTypes returns __ListVerticesV2Input.Types, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetTypes() []string { return v.Types }

// GetAfter returns __ListVerticesV2Input.After, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetAfter() string { return v.After }

// GetSize returns __ListVerticesV2Input.Size, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetSize() int { return v.Size }

// GetPropertyFilters returns __ListVerticesV2Input.PropertyFilters, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetPropertyFilters() map[string]interface{} { return v.PropertyFilters }

// GetFilterType returns __ListVerticesV2Input.FilterType, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetFilterType() FilterType { return v.FilterType }

// GetSearch returns __ListVerticesV2Input.Search, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetSearch() string { return v.Search }

// GetSort returns __ListVerticesV2Input.Sort, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetSort() []FieldSort { return v.Sort }

// __QueryJupiterOneInput is used internally by genqlient
type __QueryJupiterOneInput struct {
	Query            string                 `json:"query"`
	Cursor           string                 `json:"cursor"`
	DeferredFormat   DeferredResponseFormat `json:"deferredFormat"`
	DeferredResponse DeferredResponseOption `json:"deferredResponse"`
	DryRun           bool                   `json:"dryRun"`
	Flags            QueryV1Flags           `json:"flags"`
	IncludeDeleted   bool                   `json:"includeDeleted"`
	Remember         bool                   `json:"remember"`
	Variables        map[string]interface{} `json:"variables"`
}

// GetQuery returns __QueryJupiterOneInput.Query, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetQuery() string { return v.Query }

// GetCursor returns __QueryJupiterOneInput.Cursor, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetCursor() string { return v.Cursor }

// GetDeferredFormat returns __QueryJupiterOneInput.DeferredFormat, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetDeferredFormat() DeferredResponseFormat { return v.DeferredFormat }

// GetDeferredResponse returns __QueryJupiterOneInput.DeferredResponse, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetDeferredResponse() DeferredResponseOption {
	return v.DeferredResponse
}

// GetDryRun returns __QueryJupiterOneInput.DryRun, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetDryRun() bool { return v.DryRun }

// GetFlags returns __QueryJupiterOneInput.Flags, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetFlags() QueryV1Flags { return v.Flags }

// GetIncludeDeleted returns __QueryJupiterOneInput.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetIncludeDeleted() bool { return v.IncludeDeleted }

// GetRemember returns __QueryJupiterOneInput.Remember, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetRemember() bool { return v.Remember }

// GetVariables returns __QueryJupiterOneInput.Variables, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetVariables() map[string]interface{} { return v.Variables }

// __UpdateIntegrationInstanceInput is used internally by genqlient
type __UpdateIntegrationInstanceInput struct {
	Id     string                         `json:"id"`
	Update UpdateIntegrationInstanceInput `json:"update"`
}

// GetId returns __UpdateIntegrationInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateIntegrationInstanceInput) GetId() string { return v.Id }

// GetUpdate returns __UpdateIntegrationInstanceInput.Update, and is useful for accessing the field via an interface.
func (v *__UpdateIntegrationInstanceInput) GetUpdate() UpdateIntegrationInstanceInput {
	return v.Update
}

// __VertexInput is used internally by genqlient
type __VertexInput struct {
	Filters         VertexFilters          `json:"filters"`
	Id              string                 `json:"id"`
	PropertyFilters map[string]interface{} `json:"propertyFilters"`
}

// GetFilters returns __VertexInput.Filters, and is useful for accessing the field via an interface.
func (v *__VertexInput) GetFilters() VertexFilters { return v.Filters }

// GetId returns __VertexInput.Id, and is useful for accessing the field via an interface.
func (v *__VertexInput) GetId() string { return v.Id }

// GetPropertyFilters returns __VertexInput.PropertyFilters, and is useful for accessing the field via an interface.
func (v *__VertexInput) GetPropertyFilters() map[string]interface{} { return v.PropertyFilters }

func CreateInstance(
	ctx context.Context,
	client graphql.Client,
	instance CreateIntegrationInstanceInput,
) (*CreateInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "CreateInstance",
		Query: `
mutation CreateInstance ($instance: CreateIntegrationInstanceInput!) {
	createIntegrationInstance(instance: $instance) {
		id
		name
		description
		pollingInterval
		integrationDefinitionId
		description
		config
	}
}
`,
		Variables: &__CreateInstanceInput{
			Instance: instance,
		},
	}
	var err error

	var data CreateInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteIntegrationInstance(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteIntegrationInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteIntegrationInstance",
		Query: `
mutation DeleteIntegrationInstance ($id: String!) {
	deleteIntegrationInstance(id: $id) {
		success
	}
}
`,
		Variables: &__DeleteIntegrationInstanceInput{
			Id: id,
		},
	}
	var err error

	var data DeleteIntegrationInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetIntegrationDefinition(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetIntegrationDefinitionResponse, error) {
	req := &graphql.Request{
		OpName: "GetIntegrationDefinition",
		Query: `
query GetIntegrationDefinition ($id: String) {
	integrationDefinition(id: $id) {
		id
		integrationType
		integrationClass
		name
		title
		repoWebLink
	}
}
`,
		Variables: &__GetIntegrationDefinitionInput{
			Id: id,
		},
	}
	var err error

	var data GetIntegrationDefinitionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetIntegrationInstance(
	ctx context.Context,
	client graphql.Client,
	integrationInstanceId string,
) (*GetIntegrationInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "GetIntegrationInstance",
		Query: `
query GetIntegrationInstance ($integrationInstanceId: String!) {
	integrationInstance(id: $integrationInstanceId) {
		... IntegrationInstanceValues
		__typename
	}
}
fragment IntegrationInstanceValues on IntegrationInstance {
	id
	name
	accountId
	sourceIntegrationInstanceId
	pollingInterval
	pollingIntervalCronExpression {
		hour
		dayOfWeek
		__typename
	}
	integrationDefinition {
		name
		integrationType
		__typename
	}
	integrationDefinitionId
	description
	config
	offsiteComplete
	jobs {
		jobs {
			... IntegrationInstanceJobValues
			__typename
		}
		__typename
	}
	instanceRelationship
	__typename
}
fragment IntegrationInstanceJobValues on IntegrationJob {
	id
	status
	integrationInstanceId
	createDate
	endDate
	errorsOccurred
	__typename
}
`,
		Variables: &__GetIntegrationInstanceInput{
			IntegrationInstanceId: integrationInstanceId,
		},
	}
	var err error

	var data GetIntegrationInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func IntegrationDefinitions(
	ctx context.Context,
	client graphql.Client,
	cursor string,
) (*IntegrationDefinitionsResponse, error) {
	req := &graphql.Request{
		OpName: "IntegrationDefinitions",
		Query: `
query IntegrationDefinitions ($cursor: String) {
	integrationDefinitions(cursor: $cursor) {
		definitions {
			id
			integrationType
			integrationClass
			name
			repoWebLink
			title
			configFields {
				key
			}
		}
		pageInfo {
			endCursor
			hasNextPage
		}
	}
}
`,
		Variables: &__IntegrationDefinitionsInput{
			Cursor: cursor,
		},
	}
	var err error

	var data IntegrationDefinitionsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func InvokeInstance(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*InvokeInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "InvokeInstance",
		Query: `
mutation InvokeInstance ($id: String!) {
	invokeIntegrationInstance(id: $id) {
		success
		integrationJobId
	}
}
`,
		Variables: &__InvokeInstanceInput{
			Id: id,
		},
	}
	var err error

	var data InvokeInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func ListEvents(
	ctx context.Context,
	client graphql.Client,
	jobId string,
	integrationInstanceId string,
	cursor string,
	size int,
) (*ListEventsResponse, error) {
	req := &graphql.Request{
		OpName: "ListEvents",
		Query: `
query ListEvents ($jobId: String!, $integrationInstanceId: String!, $cursor: String, $size: Int) {
	integrationEvents(size: $size, cursor: $cursor, jobId: $jobId, integrationInstanceId: $integrationInstanceId) {
		events {
			id
			jobId
			name
			description
			createDate
		}
		pageInfo {
			endCursor
			hasNextPage
		}
	}
}
`,
		Variables: &__ListEventsInput{
			JobId:                 jobId,
			IntegrationInstanceId: integrationInstanceId,
			Cursor:                cursor,
			Size:                  size,
		},
	}
	var err error

	var data ListEventsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func ListIntegrationInstances(
	ctx context.Context,
	client graphql.Client,
	cursor string,
) (*ListIntegrationInstancesResponse, error) {
	req := &graphql.Request{
		OpName: "ListIntegrationInstances",
		Query: `
query ListIntegrationInstances ($cursor: String) {
	integrationInstances(cursor: $cursor) {
		instances {
			id
			name
			description
			integrationDefinitionId
		}
		pageInfo {
			endCursor
			hasNextPage
		}
	}
}
`,
		Variables: &__ListIntegrationInstancesInput{
			Cursor: cursor,
		},
	}
	var err error

	var data ListIntegrationInstancesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func ListJobs(
	ctx context.Context,
	client graphql.Client,
	integrationInstanceId string,
	cursor string,
	size int,
) (*ListJobsResponse, error) {
	req := &graphql.Request{
		OpName: "ListJobs",
		Query: `
query ListJobs ($integrationInstanceId: String!, $cursor: String, $size: Int) {
	integrationJobs(integrationInstanceId: $integrationInstanceId, cursor: $cursor, size: $size) {
		jobs {
			id
			createDate
			endDate
			errorsOccurred
			status
			integrationInstanceId
		}
		pageInfo {
			endCursor
			hasNextPage
		}
	}
}
`,
		Variables: &__ListJobsInput{
			IntegrationInstanceId: integrationInstanceId,
			Cursor:                cursor,
			Size:                  size,
		},
	}
	var err error

	var data ListJobsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func ListVerticesV2(
	ctx context.Context,
	client graphql.Client,
	classes []string,
	types []string,
	after string,
	size int,
	propertyFilters map[string]interface{},
	filterType FilterType,
	search string,
	sort []FieldSort,
) (*ListVerticesV2Response, error) {
	req := &graphql.Request{
		OpName: "ListVerticesV2",
		Query: `
query ListVerticesV2 ($classes: [String], $types: [String], $after: String, $size: Int, $propertyFilters: JSON, $filterType: FilterType, $search: String, $sort: [FieldSort]) {
	listVerticesV2(filters: {_class:$classes,_type:$types}, filterType: $filterType, propertyFilters: $propertyFilters, after: $after, size: $size, search: $search, sort: $sort) {
		vertices {
			id
			properties
			entity {
				_id
				_class
				_type
				_integrationName
				displayName
			}
		}
		pageInfo {
			endCursor
			hasNextPage
		}
		total
	}
}
`,
		Variables: &__ListVerticesV2Input{
			Classes:         classes,
			Types:           types,
			After:           after,
			Size:            size,
			PropertyFilters: propertyFilters,
			FilterType:      filterType,
			Search:          search,
			Sort:            sort,
		},
	}
	var err error

	var data ListVerticesV2Response
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func QueryJupiterOne(
	ctx context.Context,
	client graphql.Client,
	query string,
	cursor string,
	deferredFormat DeferredResponseFormat,
	deferredResponse DeferredResponseOption,
	dryRun bool,
	flags QueryV1Flags,
	includeDeleted bool,
	remember bool,
	variables map[string]interface{},
) (*QueryJupiterOneResponse, error) {
	req := &graphql.Request{
		OpName: "QueryJupiterOne",
		Query: `
query QueryJupiterOne ($query: String!, $cursor: String, $deferredFormat: DeferredResponseFormat, $deferredResponse: DeferredResponseOption, $dryRun: Boolean, $flags: QueryV1Flags, $includeDeleted: Boolean, $remember: Boolean, $variables: JSON) {
	queryV1(query: $query, cursor: $cursor, deferredFormat: $deferredFormat, deferredResponse: $deferredResponse, dryRun: $dryRun, flags: $flags, includeDeleted: $includeDeleted, remember: $remember, variables: $variables) {
		cursor
		data
		totalCount
		type
		url
	}
}
`,
		Variables: &__QueryJupiterOneInput{
			Query:            query,
			Cursor:           cursor,
			DeferredFormat:   deferredFormat,
			DeferredResponse: deferredResponse,
			DryRun:           dryRun,
			Flags:            flags,
			IncludeDeleted:   includeDeleted,
			Remember:         remember,
			Variables:        variables,
		},
	}
	var err error

	var data QueryJupiterOneResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateIntegrationInstance(
	ctx context.Context,
	client graphql.Client,
	id string,
	update UpdateIntegrationInstanceInput,
) (*UpdateIntegrationInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateIntegrationInstance",
		Query: `
mutation UpdateIntegrationInstance ($id: String!, $update: UpdateIntegrationInstanceInput!) {
	updateIntegrationInstance(id: $id, update: $update) {
		id
		name
		pollingInterval
		pollingIntervalCronExpression {
			hour
			dayOfWeek
			__typename
		}
		integrationDefinitionId
		description
		config
		offsiteComplete
		__typename
	}
}
`,
		Variables: &__UpdateIntegrationInstanceInput{
			Id:     id,
			Update: update,
		},
	}
	var err error

	var data UpdateIntegrationInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func Vertex(
	ctx context.Context,
	client graphql.Client,
	filters VertexFilters,
	id string,
	propertyFilters map[string]interface{},
) (*VertexResponse, error) {
	req := &graphql.Request{
		OpName: "Vertex",
		Query: `
query Vertex ($filters: VertexFilters, $id: String, $propertyFilters: JSON) {
	vertex(filters: $filters, id: $id, propertyFilters: $propertyFilters) {
		edges {
			fromVertexId
			id
			properties
			relationship {
				__typename
				_accountId
				_beginOn
				_class
				_createdOn
				_deleted
				_endOn
				_fromEntityId
				_fromEntityKey
				_id
				_integrationDefinitionId
				_integrationInstanceId
				_integrationName
				_key
				_latest
				_scope
				_source
				_toEntityId
				_toEntityKey
				_type
				_version
				displayName
			}
			toVertexId
		}
		entity {
			__typename
			_accountId
			_beginOn
			_class
			_createdOn
			_deleted
			_endOn
			_id
			_integrationDefinitionId
			_integrationInstanceId
			_integrationName
			_key
			_latest
			_scope
			_source
			_type
			_version
			displayName
		}
		id
		properties
	}
}
`,
		Variables: &__VertexInput{
			Filters:         filters,
			Id:              id,
			PropertyFilters: propertyFilters,
		},
	}
	var err error

	var data VertexResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
