// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package jupiterone

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type DeferredResponseFormat string

const (
	DeferredResponseFormatJson DeferredResponseFormat = "JSON"
	DeferredResponseFormatCsv  DeferredResponseFormat = "CSV"
)

type DeferredResponseOption string

const (
	DeferredResponseOptionDisabled DeferredResponseOption = "DISABLED"
	DeferredResponseOptionOptional DeferredResponseOption = "OPTIONAL"
	DeferredResponseOptionForce    DeferredResponseOption = "FORCE"
)

type FieldSort struct {
	Field string    `json:"field"`
	Order SortOrder `json:"order"`
}

// GetField returns FieldSort.Field, and is useful for accessing the field via an interface.
func (v *FieldSort) GetField() string { return v.Field }

// GetOrder returns FieldSort.Order, and is useful for accessing the field via an interface.
func (v *FieldSort) GetOrder() SortOrder { return v.Order }

type FilterType string

const (
	FilterTypeAnd                FilterType = "AND"
	FilterTypeAndWithSameFieldOr FilterType = "AND_WITH_SAME_FIELD_OR"
	FilterTypeAndWithClassOr     FilterType = "AND_WITH_CLASS_OR"
	FilterTypeOrWithClassOr      FilterType = "OR_WITH_CLASS_OR"
	FilterTypeOr                 FilterType = "OR"
)

// ListVerticesV2ListVerticesV2ListVerticesResponse includes the requested fields of the GraphQL type ListVerticesResponse.
type ListVerticesV2ListVerticesV2ListVerticesResponse struct {
	Vertices []ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex `json:"vertices"`
	PageInfo ListVerticesV2ListVerticesV2ListVerticesResponsePageInfo         `json:"pageInfo"`
	Total    int                                                              `json:"total"`
}

// GetVertices returns ListVerticesV2ListVerticesV2ListVerticesResponse.Vertices, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponse) GetVertices() []ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex {
	return v.Vertices
}

// GetPageInfo returns ListVerticesV2ListVerticesV2ListVerticesResponse.PageInfo, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponse) GetPageInfo() ListVerticesV2ListVerticesV2ListVerticesResponsePageInfo {
	return v.PageInfo
}

// GetTotal returns ListVerticesV2ListVerticesV2ListVerticesResponse.Total, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponse) GetTotal() int { return v.Total }

// ListVerticesV2ListVerticesV2ListVerticesResponsePageInfo includes the requested fields of the GraphQL type PageInfo.
type ListVerticesV2ListVerticesV2ListVerticesResponsePageInfo struct {
	EndCursor   string `json:"endCursor"`
	HasNextPage bool   `json:"hasNextPage"`
}

// GetEndCursor returns ListVerticesV2ListVerticesV2ListVerticesResponsePageInfo.EndCursor, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponsePageInfo) GetEndCursor() string {
	return v.EndCursor
}

// GetHasNextPage returns ListVerticesV2ListVerticesV2ListVerticesResponsePageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponsePageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex includes the requested fields of the GraphQL type Vertex.
type ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex struct {
	Id         string                                                                                   `json:"id"`
	Properties map[string]interface{}                                                                   `json:"properties"`
	Entity     ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties `json:"entity"`
}

// GetId returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex.Id, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex) GetId() string { return v.Id }

// GetProperties returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex.Properties, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex) GetProperties() map[string]interface{} {
	return v.Properties
}

// GetEntity returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex.Entity, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertex) GetEntity() ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties {
	return v.Entity
}

// ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties includes the requested fields of the GraphQL type EntityCoreProperties.
type ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties struct {
	Id              string   `json:"_id"`
	Class           []string `json:"_class"`
	Type            []string `json:"_type"`
	IntegrationName string   `json:"_integrationName"`
	DisplayName     string   `json:"displayName"`
}

// GetId returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties.Id, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties) GetId() string {
	return v.Id
}

// GetClass returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties.Class, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties) GetClass() []string {
	return v.Class
}

// GetType returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties.Type, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties) GetType() []string {
	return v.Type
}

// GetIntegrationName returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties.IntegrationName, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties) GetIntegrationName() string {
	return v.IntegrationName
}

// GetDisplayName returns ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties.DisplayName, and is useful for accessing the field via an interface.
func (v *ListVerticesV2ListVerticesV2ListVerticesResponseVerticesVertexEntityEntityCoreProperties) GetDisplayName() string {
	return v.DisplayName
}

// ListVerticesV2Response is returned by ListVerticesV2 on success.
type ListVerticesV2Response struct {
	ListVerticesV2 ListVerticesV2ListVerticesV2ListVerticesResponse `json:"listVerticesV2"`
}

// GetListVerticesV2 returns ListVerticesV2Response.ListVerticesV2, and is useful for accessing the field via an interface.
func (v *ListVerticesV2Response) GetListVerticesV2() ListVerticesV2ListVerticesV2ListVerticesResponse {
	return v.ListVerticesV2
}

// QueryJupiterOneQueryV1QueryV1Response includes the requested fields of the GraphQL type QueryV1Response.
type QueryJupiterOneQueryV1QueryV1Response struct {
	Cursor     string                 `json:"cursor"`
	Data       map[string]interface{} `json:"data"`
	TotalCount int                    `json:"totalCount"`
	Type       string                 `json:"type"`
	Url        string                 `json:"url"`
}

// GetCursor returns QueryJupiterOneQueryV1QueryV1Response.Cursor, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneQueryV1QueryV1Response) GetCursor() string { return v.Cursor }

// GetData returns QueryJupiterOneQueryV1QueryV1Response.Data, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneQueryV1QueryV1Response) GetData() map[string]interface{} { return v.Data }

// GetTotalCount returns QueryJupiterOneQueryV1QueryV1Response.TotalCount, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneQueryV1QueryV1Response) GetTotalCount() int { return v.TotalCount }

// GetType returns QueryJupiterOneQueryV1QueryV1Response.Type, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneQueryV1QueryV1Response) GetType() string { return v.Type }

// GetUrl returns QueryJupiterOneQueryV1QueryV1Response.Url, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneQueryV1QueryV1Response) GetUrl() string { return v.Url }

// QueryJupiterOneResponse is returned by QueryJupiterOne on success.
type QueryJupiterOneResponse struct {
	QueryV1 QueryJupiterOneQueryV1QueryV1Response `json:"queryV1"`
}

// GetQueryV1 returns QueryJupiterOneResponse.QueryV1, and is useful for accessing the field via an interface.
func (v *QueryJupiterOneResponse) GetQueryV1() QueryJupiterOneQueryV1QueryV1Response {
	return v.QueryV1
}

type QueryV1Flags struct {
	AllPages           bool `json:"allPages"`
	ComputedProperties bool `json:"computedProperties"`
	RowMetadata        bool `json:"rowMetadata"`
	VariableResultSize bool `json:"variableResultSize"`
}

// GetAllPages returns QueryV1Flags.AllPages, and is useful for accessing the field via an interface.
func (v *QueryV1Flags) GetAllPages() bool { return v.AllPages }

// GetComputedProperties returns QueryV1Flags.ComputedProperties, and is useful for accessing the field via an interface.
func (v *QueryV1Flags) GetComputedProperties() bool { return v.ComputedProperties }

// GetRowMetadata returns QueryV1Flags.RowMetadata, and is useful for accessing the field via an interface.
func (v *QueryV1Flags) GetRowMetadata() bool { return v.RowMetadata }

// GetVariableResultSize returns QueryV1Flags.VariableResultSize, and is useful for accessing the field via an interface.
func (v *QueryV1Flags) GetVariableResultSize() bool { return v.VariableResultSize }

type SortOrder string

const (
	SortOrderAsc  SortOrder = "ASC"
	SortOrderDesc SortOrder = "DESC"
)

type VertexFilters struct {
	Class []string `json:"_class"`
	Id    string   `json:"_id"`
	Key   string   `json:"_key"`
	Type  []string `json:"_type"`
}

// GetClass returns VertexFilters.Class, and is useful for accessing the field via an interface.
func (v *VertexFilters) GetClass() []string { return v.Class }

// GetId returns VertexFilters.Id, and is useful for accessing the field via an interface.
func (v *VertexFilters) GetId() string { return v.Id }

// GetKey returns VertexFilters.Key, and is useful for accessing the field via an interface.
func (v *VertexFilters) GetKey() string { return v.Key }

// GetType returns VertexFilters.Type, and is useful for accessing the field via an interface.
func (v *VertexFilters) GetType() []string { return v.Type }

// VertexResponse is returned by Vertex on success.
type VertexResponse struct {
	Vertex VertexVertex `json:"vertex"`
}

// GetVertex returns VertexResponse.Vertex, and is useful for accessing the field via an interface.
func (v *VertexResponse) GetVertex() VertexVertex { return v.Vertex }

// VertexVertex includes the requested fields of the GraphQL type Vertex.
type VertexVertex struct {
	Edges      []VertexVertexEdgesEdge                `json:"edges"`
	Entity     VertexVertexEntityEntityCoreProperties `json:"entity"`
	Id         string                                 `json:"id"`
	Properties map[string]interface{}                 `json:"properties"`
}

// GetEdges returns VertexVertex.Edges, and is useful for accessing the field via an interface.
func (v *VertexVertex) GetEdges() []VertexVertexEdgesEdge { return v.Edges }

// GetEntity returns VertexVertex.Entity, and is useful for accessing the field via an interface.
func (v *VertexVertex) GetEntity() VertexVertexEntityEntityCoreProperties { return v.Entity }

// GetId returns VertexVertex.Id, and is useful for accessing the field via an interface.
func (v *VertexVertex) GetId() string { return v.Id }

// GetProperties returns VertexVertex.Properties, and is useful for accessing the field via an interface.
func (v *VertexVertex) GetProperties() map[string]interface{} { return v.Properties }

// VertexVertexEdgesEdge includes the requested fields of the GraphQL type Edge.
type VertexVertexEdgesEdge struct {
	FromVertexId string                                                      `json:"fromVertexId"`
	Id           string                                                      `json:"id"`
	Properties   map[string]interface{}                                      `json:"properties"`
	Relationship VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties `json:"relationship"`
	ToVertexId   string                                                      `json:"toVertexId"`
}

// GetFromVertexId returns VertexVertexEdgesEdge.FromVertexId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdge) GetFromVertexId() string { return v.FromVertexId }

// GetId returns VertexVertexEdgesEdge.Id, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdge) GetId() string { return v.Id }

// GetProperties returns VertexVertexEdgesEdge.Properties, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdge) GetProperties() map[string]interface{} { return v.Properties }

// GetRelationship returns VertexVertexEdgesEdge.Relationship, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdge) GetRelationship() VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties {
	return v.Relationship
}

// GetToVertexId returns VertexVertexEdgesEdge.ToVertexId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdge) GetToVertexId() string { return v.ToVertexId }

// VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties includes the requested fields of the GraphQL type RelationshipCoreProperties.
type VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties struct {
	Typename                string `json:"__typename"`
	AccountId               string `json:"_accountId"`
	BeginOn                 int    `json:"_beginOn"`
	Class                   string `json:"_class"`
	CreatedOn               int    `json:"_createdOn"`
	Deleted                 bool   `json:"_deleted"`
	EndOn                   int    `json:"_endOn"`
	FromEntityId            string `json:"_fromEntityId"`
	FromEntityKey           string `json:"_fromEntityKey"`
	Id                      string `json:"_id"`
	IntegrationDefinitionId string `json:"_integrationDefinitionId"`
	IntegrationInstanceId   string `json:"_integrationInstanceId"`
	IntegrationName         string `json:"_integrationName"`
	Key                     string `json:"_key"`
	Latest                  bool   `json:"_latest"`
	Scope                   string `json:"_scope"`
	Source                  string `json:"_source"`
	ToEntityId              string `json:"_toEntityId"`
	ToEntityKey             string `json:"_toEntityKey"`
	Type                    string `json:"_type"`
	Version                 int    `json:"_version"`
	DisplayName             string `json:"displayName"`
}

// GetTypename returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Typename, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetTypename() string {
	return v.Typename
}

// GetAccountId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.AccountId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetAccountId() string {
	return v.AccountId
}

// GetBeginOn returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.BeginOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetBeginOn() int {
	return v.BeginOn
}

// GetClass returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Class, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetClass() string {
	return v.Class
}

// GetCreatedOn returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.CreatedOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetCreatedOn() int {
	return v.CreatedOn
}

// GetDeleted returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Deleted, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetDeleted() bool {
	return v.Deleted
}

// GetEndOn returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.EndOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetEndOn() int { return v.EndOn }

// GetFromEntityId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.FromEntityId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetFromEntityId() string {
	return v.FromEntityId
}

// GetFromEntityKey returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.FromEntityKey, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetFromEntityKey() string {
	return v.FromEntityKey
}

// GetId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Id, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetId() string { return v.Id }

// GetIntegrationDefinitionId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.IntegrationDefinitionId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetIntegrationDefinitionId() string {
	return v.IntegrationDefinitionId
}

// GetIntegrationInstanceId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.IntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetIntegrationInstanceId() string {
	return v.IntegrationInstanceId
}

// GetIntegrationName returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.IntegrationName, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetIntegrationName() string {
	return v.IntegrationName
}

// GetKey returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Key, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetKey() string { return v.Key }

// GetLatest returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Latest, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetLatest() bool {
	return v.Latest
}

// GetScope returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Scope, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetScope() string {
	return v.Scope
}

// GetSource returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Source, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetSource() string {
	return v.Source
}

// GetToEntityId returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.ToEntityId, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetToEntityId() string {
	return v.ToEntityId
}

// GetToEntityKey returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.ToEntityKey, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetToEntityKey() string {
	return v.ToEntityKey
}

// GetType returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Type, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetType() string { return v.Type }

// GetVersion returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.Version, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetVersion() int {
	return v.Version
}

// GetDisplayName returns VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties.DisplayName, and is useful for accessing the field via an interface.
func (v *VertexVertexEdgesEdgeRelationshipRelationshipCoreProperties) GetDisplayName() string {
	return v.DisplayName
}

// VertexVertexEntityEntityCoreProperties includes the requested fields of the GraphQL type EntityCoreProperties.
type VertexVertexEntityEntityCoreProperties struct {
	Typename                string   `json:"__typename"`
	AccountId               string   `json:"_accountId"`
	BeginOn                 int      `json:"_beginOn"`
	Class                   []string `json:"_class"`
	CreatedOn               int      `json:"_createdOn"`
	Deleted                 bool     `json:"_deleted"`
	EndOn                   int      `json:"_endOn"`
	Id                      string   `json:"_id"`
	IntegrationDefinitionId string   `json:"_integrationDefinitionId"`
	IntegrationInstanceId   string   `json:"_integrationInstanceId"`
	IntegrationName         string   `json:"_integrationName"`
	Key                     string   `json:"_key"`
	Latest                  bool     `json:"_latest"`
	Scope                   string   `json:"_scope"`
	Source                  string   `json:"_source"`
	Type                    []string `json:"_type"`
	Version                 int      `json:"_version"`
	DisplayName             string   `json:"displayName"`
}

// GetTypename returns VertexVertexEntityEntityCoreProperties.Typename, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetTypename() string { return v.Typename }

// GetAccountId returns VertexVertexEntityEntityCoreProperties.AccountId, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetAccountId() string { return v.AccountId }

// GetBeginOn returns VertexVertexEntityEntityCoreProperties.BeginOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetBeginOn() int { return v.BeginOn }

// GetClass returns VertexVertexEntityEntityCoreProperties.Class, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetClass() []string { return v.Class }

// GetCreatedOn returns VertexVertexEntityEntityCoreProperties.CreatedOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetCreatedOn() int { return v.CreatedOn }

// GetDeleted returns VertexVertexEntityEntityCoreProperties.Deleted, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetDeleted() bool { return v.Deleted }

// GetEndOn returns VertexVertexEntityEntityCoreProperties.EndOn, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetEndOn() int { return v.EndOn }

// GetId returns VertexVertexEntityEntityCoreProperties.Id, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetId() string { return v.Id }

// GetIntegrationDefinitionId returns VertexVertexEntityEntityCoreProperties.IntegrationDefinitionId, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetIntegrationDefinitionId() string {
	return v.IntegrationDefinitionId
}

// GetIntegrationInstanceId returns VertexVertexEntityEntityCoreProperties.IntegrationInstanceId, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetIntegrationInstanceId() string {
	return v.IntegrationInstanceId
}

// GetIntegrationName returns VertexVertexEntityEntityCoreProperties.IntegrationName, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetIntegrationName() string {
	return v.IntegrationName
}

// GetKey returns VertexVertexEntityEntityCoreProperties.Key, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetKey() string { return v.Key }

// GetLatest returns VertexVertexEntityEntityCoreProperties.Latest, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetLatest() bool { return v.Latest }

// GetScope returns VertexVertexEntityEntityCoreProperties.Scope, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetScope() string { return v.Scope }

// GetSource returns VertexVertexEntityEntityCoreProperties.Source, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetSource() string { return v.Source }

// GetType returns VertexVertexEntityEntityCoreProperties.Type, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetType() []string { return v.Type }

// GetVersion returns VertexVertexEntityEntityCoreProperties.Version, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetVersion() int { return v.Version }

// GetDisplayName returns VertexVertexEntityEntityCoreProperties.DisplayName, and is useful for accessing the field via an interface.
func (v *VertexVertexEntityEntityCoreProperties) GetDisplayName() string { return v.DisplayName }

// __ListVerticesV2Input is used internally by genqlient
type __ListVerticesV2Input struct {
	Classes         []string               `json:"classes"`
	Types           []string               `json:"types"`
	After           string                 `json:"after"`
	Size            int                    `json:"size"`
	PropertyFilters map[string]interface{} `json:"propertyFilters"`
	FilterType      FilterType             `json:"filterType"`
	Search          string                 `json:"search"`
	Sort            []FieldSort            `json:"sort"`
}

// GetClasses returns __ListVerticesV2Input.Classes, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetClasses() []string { return v.Classes }

// GetTypes returns __ListVerticesV2Input.Types, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetTypes() []string { return v.Types }

// GetAfter returns __ListVerticesV2Input.After, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetAfter() string { return v.After }

// GetSize returns __ListVerticesV2Input.Size, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetSize() int { return v.Size }

// GetPropertyFilters returns __ListVerticesV2Input.PropertyFilters, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetPropertyFilters() map[string]interface{} { return v.PropertyFilters }

// GetFilterType returns __ListVerticesV2Input.FilterType, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetFilterType() FilterType { return v.FilterType }

// GetSearch returns __ListVerticesV2Input.Search, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetSearch() string { return v.Search }

// GetSort returns __ListVerticesV2Input.Sort, and is useful for accessing the field via an interface.
func (v *__ListVerticesV2Input) GetSort() []FieldSort { return v.Sort }

// __QueryJupiterOneInput is used internally by genqlient
type __QueryJupiterOneInput struct {
	Query            string                 `json:"query"`
	Cursor           string                 `json:"cursor"`
	DeferredFormat   DeferredResponseFormat `json:"deferredFormat"`
	DeferredResponse DeferredResponseOption `json:"deferredResponse"`
	DryRun           bool                   `json:"dryRun"`
	Flags            QueryV1Flags           `json:"flags"`
	IncludeDeleted   bool                   `json:"includeDeleted"`
	Remember         bool                   `json:"remember"`
	Variables        map[string]interface{} `json:"variables"`
}

// GetQuery returns __QueryJupiterOneInput.Query, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetQuery() string { return v.Query }

// GetCursor returns __QueryJupiterOneInput.Cursor, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetCursor() string { return v.Cursor }

// GetDeferredFormat returns __QueryJupiterOneInput.DeferredFormat, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetDeferredFormat() DeferredResponseFormat { return v.DeferredFormat }

// GetDeferredResponse returns __QueryJupiterOneInput.DeferredResponse, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetDeferredResponse() DeferredResponseOption {
	return v.DeferredResponse
}

// GetDryRun returns __QueryJupiterOneInput.DryRun, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetDryRun() bool { return v.DryRun }

// GetFlags returns __QueryJupiterOneInput.Flags, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetFlags() QueryV1Flags { return v.Flags }

// GetIncludeDeleted returns __QueryJupiterOneInput.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetIncludeDeleted() bool { return v.IncludeDeleted }

// GetRemember returns __QueryJupiterOneInput.Remember, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetRemember() bool { return v.Remember }

// GetVariables returns __QueryJupiterOneInput.Variables, and is useful for accessing the field via an interface.
func (v *__QueryJupiterOneInput) GetVariables() map[string]interface{} { return v.Variables }

// __VertexInput is used internally by genqlient
type __VertexInput struct {
	Filters         VertexFilters          `json:"filters"`
	Id              string                 `json:"id"`
	PropertyFilters map[string]interface{} `json:"propertyFilters"`
}

// GetFilters returns __VertexInput.Filters, and is useful for accessing the field via an interface.
func (v *__VertexInput) GetFilters() VertexFilters { return v.Filters }

// GetId returns __VertexInput.Id, and is useful for accessing the field via an interface.
func (v *__VertexInput) GetId() string { return v.Id }

// GetPropertyFilters returns __VertexInput.PropertyFilters, and is useful for accessing the field via an interface.
func (v *__VertexInput) GetPropertyFilters() map[string]interface{} { return v.PropertyFilters }

func ListVerticesV2(
	ctx context.Context,
	client graphql.Client,
	classes []string,
	types []string,
	after string,
	size int,
	propertyFilters map[string]interface{},
	filterType FilterType,
	search string,
	sort []FieldSort,
) (*ListVerticesV2Response, error) {
	req := &graphql.Request{
		OpName: "ListVerticesV2",
		Query: `
query ListVerticesV2 ($classes: [String], $types: [String], $after: String, $size: Int, $propertyFilters: JSON, $filterType: FilterType, $search: String, $sort: [FieldSort]) {
	listVerticesV2(filters: {_class:$classes,_type:$types}, filterType: $filterType, propertyFilters: $propertyFilters, after: $after, size: $size, search: $search, sort: $sort) {
		vertices {
			id
			properties
			entity {
				_id
				_class
				_type
				_integrationName
				displayName
			}
		}
		pageInfo {
			endCursor
			hasNextPage
		}
		total
	}
}
`,
		Variables: &__ListVerticesV2Input{
			Classes:         classes,
			Types:           types,
			After:           after,
			Size:            size,
			PropertyFilters: propertyFilters,
			FilterType:      filterType,
			Search:          search,
			Sort:            sort,
		},
	}
	var err error

	var data ListVerticesV2Response
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func QueryJupiterOne(
	ctx context.Context,
	client graphql.Client,
	query string,
	cursor string,
	deferredFormat DeferredResponseFormat,
	deferredResponse DeferredResponseOption,
	dryRun bool,
	flags QueryV1Flags,
	includeDeleted bool,
	remember bool,
	variables map[string]interface{},
) (*QueryJupiterOneResponse, error) {
	req := &graphql.Request{
		OpName: "QueryJupiterOne",
		Query: `
query QueryJupiterOne ($query: String!, $cursor: String, $deferredFormat: DeferredResponseFormat, $deferredResponse: DeferredResponseOption, $dryRun: Boolean, $flags: QueryV1Flags, $includeDeleted: Boolean, $remember: Boolean, $variables: JSON) {
	queryV1(query: $query, cursor: $cursor, deferredFormat: $deferredFormat, deferredResponse: $deferredResponse, dryRun: $dryRun, flags: $flags, includeDeleted: $includeDeleted, remember: $remember, variables: $variables) {
		cursor
		data
		totalCount
		type
		url
	}
}
`,
		Variables: &__QueryJupiterOneInput{
			Query:            query,
			Cursor:           cursor,
			DeferredFormat:   deferredFormat,
			DeferredResponse: deferredResponse,
			DryRun:           dryRun,
			Flags:            flags,
			IncludeDeleted:   includeDeleted,
			Remember:         remember,
			Variables:        variables,
		},
	}
	var err error

	var data QueryJupiterOneResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func Vertex(
	ctx context.Context,
	client graphql.Client,
	filters VertexFilters,
	id string,
	propertyFilters map[string]interface{},
) (*VertexResponse, error) {
	req := &graphql.Request{
		OpName: "Vertex",
		Query: `
query Vertex ($filters: VertexFilters, $id: String, $propertyFilters: JSON) {
	vertex(filters: $filters, id: $id, propertyFilters: $propertyFilters) {
		edges {
			fromVertexId
			id
			properties
			relationship {
				__typename
				_accountId
				_beginOn
				_class
				_createdOn
				_deleted
				_endOn
				_fromEntityId
				_fromEntityKey
				_id
				_integrationDefinitionId
				_integrationInstanceId
				_integrationName
				_key
				_latest
				_scope
				_source
				_toEntityId
				_toEntityKey
				_type
				_version
				displayName
			}
			toVertexId
		}
		entity {
			__typename
			_accountId
			_beginOn
			_class
			_createdOn
			_deleted
			_endOn
			_id
			_integrationDefinitionId
			_integrationInstanceId
			_integrationName
			_key
			_latest
			_scope
			_source
			_type
			_version
			displayName
		}
		id
		properties
	}
}
`,
		Variables: &__VertexInput{
			Filters:         filters,
			Id:              id,
			PropertyFilters: propertyFilters,
		},
	}
	var err error

	var data VertexResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
